<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux扩容根磁盘空间</title>
    <link href="/2022/04/17/Linux%E6%89%A9%E5%AE%B9%E6%A0%B9%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/"/>
    <url>/2022/04/17/Linux%E6%89%A9%E5%AE%B9%E6%A0%B9%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/</url>
    
    <content type="html"><![CDATA[<p>1.添加磁盘空间</p><p>2.查看磁盘信息</p><figure class="highlight ebnf"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">fdisk -l</span><br></code></pre></td></tr></table></figure><p>3.新建磁盘分区</p><p>4.创建新分区(vdb1)。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">fdisk <span class="hljs-regexp">/dev/</span>vdb<br></code></pre></td></tr></table></figure><p>5.创建物理卷。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">pvcreate <span class="hljs-regexp">/dev/</span>vdb1<br></code></pre></td></tr></table></figure><p>6.将添加新的物理卷，加载到centos卷组。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vgextend centos <span class="hljs-regexp">/dev/</span>vdb1<br></code></pre></td></tr></table></figure><p>7.增加&#x2F;dev&#x2F;mapper&#x2F;centos-root大小，增加100G。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">lvresize -L +<span class="hljs-number">100</span>G <span class="hljs-regexp">/dev/m</span>apper/centos-root<br></code></pre></td></tr></table></figure><p>8.同步文件系统。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">xfs_growfs <span class="hljs-regexp">/dev/m</span>apper/centos-root<br></code></pre></td></tr></table></figure><p>9.查看扩容后的大小。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux-根扩容</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>openstack-Train.md</title>
    <link href="/2022/04/17/openstack-Train-md/"/>
    <url>/2022/04/17/openstack-Train-md/</url>
    
    <content type="html"><![CDATA[<h1 id="OpenStack-T版搭建"><a href="#OpenStack-T版搭建" class="headerlink" title="OpenStack T版搭建"></a>OpenStack T版搭建</h1><h2 id="密码表：-密码均为密码名称"><a href="#密码表：-密码均为密码名称" class="headerlink" title="密码表：(密码均为密码名称)"></a>密码表：(密码均为密码名称)</h2><table><thead><tr><th align="center">密码名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">数据库密码(不能使用变量)</td><td align="center">数据库的root密码</td></tr><tr><td align="center"><code>ADMIN_PASS</code></td><td align="center"><code>admin</code> 用户密码</td></tr><tr><td align="center"><code>CEILOMETER_DBPASS</code></td><td align="center">Telemetry 服务的数据库密码</td></tr><tr><td align="center"><code>CEILOMETER_PASS</code></td><td align="center">Telemetry 服务的 <code>ceilometer</code> 用户密码</td></tr><tr><td align="center"><code>CINDER_DBPASS</code></td><td align="center">块设备存储服务的数据库密码</td></tr><tr><td align="center"><code>CINDER_PASS</code></td><td align="center">块设备存储服务的 <code>cinder</code> 密码</td></tr><tr><td align="center"><code>DASH_DBPASS</code></td><td align="center">Database password for the dashboard</td></tr><tr><td align="center"><code>DEMO_PASS</code></td><td align="center"><code>demo</code> 用户的密码</td></tr><tr><td align="center"><code>GLANCE_DBPASS</code></td><td align="center">镜像服务的数据库密码</td></tr><tr><td align="center"><code>GLANCE_PASS</code></td><td align="center">镜像服务的 <code>glance</code> 用户密码</td></tr><tr><td align="center"><code>HEAT_DBPASS</code></td><td align="center">Orchestration服务的数据库密码</td></tr><tr><td align="center"><code>HEAT_DOMAIN_PASS</code></td><td align="center">Orchestration 域的密码</td></tr><tr><td align="center"><code>HEAT_PASS</code></td><td align="center">Orchestration 服务中<code>heat</code>用户的密码</td></tr><tr><td align="center"><code>KEYSTONE_DBPASS</code></td><td align="center">认证服务的数据库密码</td></tr><tr><td align="center"><code>NEUTRON_DBPASS</code></td><td align="center">网络服务的数据库密码</td></tr><tr><td align="center"><code>NEUTRON_PASS</code></td><td align="center">网络服务的 <code>neutron</code> 用户密码</td></tr><tr><td align="center"><code>NOVA_DBPASS</code></td><td align="center">计算服务的数据库密码</td></tr><tr><td align="center"><code>NOVA_PASS</code></td><td align="center">计算服务中<code>nova</code>用户的密码</td></tr><tr><td align="center"><code>RABBIT_PASS</code></td><td align="center">RabbitMQ的guest用户密码</td></tr><tr><td align="center"><code>SWIFT_PASS</code></td><td align="center">对象存储服务用户<code>swift</code>的密码</td></tr><tr><td align="center"><code>PLACEMENT_PASS</code></td><td align="center">Placement的密码</td></tr></tbody></table><h2 id="主机配置"><a href="#主机配置" class="headerlink" title="主机配置"></a>主机配置</h2><table><thead><tr><th align="center">主机名</th><th align="center">IP</th><th align="center">内存</th><th align="center">硬盘</th><th align="center">网卡数</th></tr></thead><tbody><tr><td align="center">controller</td><td align="center">172.16.100.28</td><td align="center">8G</td><td align="center">80G</td><td align="center">1</td></tr><tr><td align="center">compute</td><td align="center">172.16.100.29</td><td align="center">8G</td><td align="center">80G</td><td align="center">1</td></tr></tbody></table><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><h4 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h4><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">hostnamectl set-hostname controller<br></code></pre></td></tr></table></figure><h4 id="compute"><a href="#compute" class="headerlink" title="compute"></a>compute</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hostnamectl set-hostname compute<br></code></pre></td></tr></table></figure><!--注意重新连接 否则后面创建Rabbitmq用户可能会报错--><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><h3 id="controller配置"><a href="#controller配置" class="headerlink" title="controller配置"></a>controller配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/sysconfig/network-scripts/ifcfg-eth0<br><br>ONBOOT=yes<br>BOOTPROTO=static<br>IPADDR=172.16.100.28<br>NETMASK=255.255.255.0<br>GATEWAY=172.16.100.254<br>DNS1=114.114.114.114<br></code></pre></td></tr></table></figure><h3 id="compute配置"><a href="#compute配置" class="headerlink" title="compute配置"></a>compute配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/sysconfig/network-scripts/ifcfg-eth0<br><br>ONBOOT=yes<br>BOOTPROTO=static<br>IPADDR=172.16.100.29<br>NETMASK=255.255.255.0<br>GATEWAY=172.16.100.254<br>DNS1=114.114.114.114<br></code></pre></td></tr></table></figure><p>：wq 保存退出</p><h3 id="重启网卡"><a href="#重启网卡" class="headerlink" title="重启网卡"></a>重启网卡</h3><!--在controller和compute均执行--><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart network<br></code></pre></td></tr></table></figure><h4 id="controller-1"><a href="#controller-1" class="headerlink" title="controller"></a>controller</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# ip addr<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000<br>    link/ether 52:54:00:00:db:9c brd ff:ff:ff:ff:ff:ff<br>    inet 172.16.100.28/24 brd 172.16.100.255 scope global noprefixroute eth0<br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::6010:d73a:2158:5fe8/64 scope link noprefixroute <br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><h4 id="compute-1"><a href="#compute-1" class="headerlink" title="compute"></a>compute</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]# ip addr<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000<br>    link/ether 52:54:00:3c:b9:4c brd ff:ff:ff:ff:ff:ff<br>    inet 172.16.100.29/24 brd 172.16.100.255 scope global noprefixroute eth0<br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::c374:72b:eb12:5916/64 scope link noprefixroute <br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><!--在controller和compute均执行--><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl stop firewalld<br>systemctl disable firewalld<br></code></pre></td></tr></table></figure><h3 id="关闭网卡守护进程"><a href="#关闭网卡守护进程" class="headerlink" title="关闭网卡守护进程"></a>关闭网卡守护进程</h3><!--在controller和compute均执行--><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shel">systemctl stop NetworkManager<br>systemctl disable NetworkManager<br></code></pre></td></tr></table></figure><h3 id="关闭SElinux"><a href="#关闭SElinux" class="headerlink" title="关闭SElinux"></a>关闭SElinux</h3><!--在controller和compute均执行--><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">setenforce 0<br><br>vi /etc/selinux/config<br><br>修改 SELINUX=enforcing 为 SELINUX=disabled<br><br>:wq 保存退出<br></code></pre></td></tr></table></figure><h3 id="查看SElinux状态"><a href="#查看SElinux状态" class="headerlink" title="查看SElinux状态"></a>查看SElinux状态</h3><!--在controller和compute均执行--><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# getenforce <br>Permissive<br><br>[root@compute ~]# getenforce <br>Permissive<br><br></code></pre></td></tr></table></figure><h3 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell">将目录下的源删除<br>rm -rf /etc/yum.repos.d/C*<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">controller</span><br>[root@controller ~]# cat /etc/yum.repos.d/http.repo <br>[centos]<br>name=centos<br>baseurl=ftp://172.16.100.66/centos<br>gpgcheck=0<br>[openstack-t]<br>name=openstack-t<br>baseurl=ftp://172.16.100.66/openstack-t<br>gpgcheck=0<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">compute</span><br>[root@compute ~]# cat /etc/yum.repos.d/http.repo <br>[centos]<br>name=centos<br>baseurl=ftp://172.16.100.66/centos<br>gpgcheck=0<br>[openstack-t]<br>name=openstack-t<br>baseurl=ftp://172.16.100.66/openstack-t<br>gpgcheck=0<br></code></pre></td></tr></table></figure><blockquote><p>此处用的是配置本地源，一个Centos，一个OpenStack源</p><p>附上国内阿里源<a href="https://mirrors.aliyun.com/centos/7/cloud/x86_64/openstack-train/">https://mirrors.aliyun.com/centos/7/cloud/x86_64/openstack-train/</a></p></blockquote><h3 id="配置host解析"><a href="#配置host解析" class="headerlink" title="配置host解析"></a>配置host解析</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# cat /etc/hosts<br>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4<br>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6<br><br>172.16.100.28 controller<br>172.16.100.29 compute<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]# cat /etc/hosts<br>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4<br>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6<br><br>172.16.100.28 controller<br>172.16.100.29 compute<br></code></pre></td></tr></table></figure><h3 id="测试各节点之间与Internet的通信"><a href="#测试各节点之间与Internet的通信" class="headerlink" title="测试各节点之间与Internet的通信"></a>测试各节点之间与Internet的通信</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# ping -c 2 compute<br>PING compute (172.16.100.29) 56(84) bytes of data.<br>64 bytes from compute (172.16.100.29): icmp_seq=1 ttl=64 time=0.250 ms<br>64 bytes from compute (172.16.100.29): icmp_seq=2 ttl=64 time=0.447 ms<br><br>--- compute ping statistics ---<br>2 packets transmitted, 2 received, 0% packet loss, time 1000ms<br>rtt min/avg/max/mdev = 0.250/0.348/0.447/0.100 m<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]# ping -c 2 controller<br>PING controller (172.16.100.28) 56(84) bytes of data.<br>64 bytes from controller (172.16.100.28): icmp_seq=1 ttl=64 time=0.378 ms<br>64 bytes from controller (172.16.100.28): icmp_seq=2 ttl=64 time=0.391 ms<br><br>--- controller ping statistics ---<br>2 packets transmitted, 2 received, 0% packet loss, time 1000ms<br>rtt min/avg/max/mdev = 0.378/0.384/0.391/0.020 ms<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# ping -c 2 baidu.com<br>PING baidu.com (220.181.38.251) 56(84) bytes of data.<br>64 bytes from 220.181.38.251 (220.181.38.251): icmp_seq=1 ttl=47 time=174 ms<br>64 bytes from 220.181.38.251 (220.181.38.251): icmp_seq=2 ttl=47 time=173 ms<br><br>--- baidu.com ping statistics ---<br>2 packets transmitted, 2 received, 0% packet loss, time 1001ms<br>rtt min/avg/max/mdev = 173.205/173.637/174.070/0.600 ms<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]# ping -c 2 baidu.com<br>PING baidu.com (220.181.38.251) 56(84) bytes of data.<br>64 bytes from 220.181.38.251 (220.181.38.251): icmp_seq=1 ttl=47 time=174 ms<br>64 bytes from 220.181.38.251 (220.181.38.251): icmp_seq=2 ttl=47 time=171 ms<br><br>--- baidu.com ping statistics ---<br>2 packets transmitted, 2 received, 0% packet loss, time 1000ms<br>rtt min/avg/max/mdev = 171.844/173.164/174.484/1.320 ms<br></code></pre></td></tr></table></figure><h3 id="修改时间同步配置文件"><a href="#修改时间同步配置文件" class="headerlink" title="修改时间同步配置文件"></a>修改时间同步配置文件</h3><h4 id="controller-2"><a href="#controller-2" class="headerlink" title="controller"></a>controller</h4><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install chrony<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/chrony.conf<br><br>server ntp.aliyun.com iburst<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##大概26行左右###</span></span><br>allow 172.16.100.0/24<br></code></pre></td></tr></table></figure><h4 id="compute-2"><a href="#compute-2" class="headerlink" title="compute"></a>compute</h4><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install chrony<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/chrony.conf<br><br>server controller iburst<br></code></pre></td></tr></table></figure><h4 id="重启chrony服务"><a href="#重启chrony服务" class="headerlink" title="重启chrony服务"></a>重启chrony服务</h4><!--在controller和compute均执行--><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart chronyd<br></code></pre></td></tr></table></figure><h4 id="验证是否同步成功"><a href="#验证是否同步成功" class="headerlink" title="验证是否同步成功"></a>验证是否同步成功</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# chronyc sources<br>210 Number of sources = 1<br>MS Name/IP address         Stratum Poll Reach LastRx Last sample               <br>===============================================================================<br>^* 203.107.6.88                  2   6   367    79   +140us[ +789us] +/-   95ms<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]# chronyc sources<br>210 Number of sources = 1<br>MS Name/IP address         Stratum Poll Reach LastRx Last sample               <br>===============================================================================<br>^* controller                    3   6   377     9    -34us[ +664us] +/-   96ms<br><br></code></pre></td></tr></table></figure><h3 id="所有节点安装openstack客户端和openstack-selinux"><a href="#所有节点安装openstack客户端和openstack-selinux" class="headerlink" title="所有节点安装openstack客户端和openstack-selinux"></a>所有节点安装openstack客户端和openstack-selinux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install python-openstackclient openstack-selinux<br></code></pre></td></tr></table></figure><h3 id="安装Mariadb数据库-controller"><a href="#安装Mariadb数据库-controller" class="headerlink" title="安装Mariadb数据库(controller)"></a>安装Mariadb数据库(controller)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install mariadb mariadb-server python2-PyMySQL<br></code></pre></td></tr></table></figure><p>创建和编辑<code>/etc/my.cnf.d/openstack.cnf</code>文件并添加以下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shel">[mysqld]<br>bind-address = 172.16.100.28 #controller IP地址<br>default-storage-engine = innodb<br>innodb_file_per_table<br>max_connections = 4096<br>collation-server = utf8_general_ci<br>character-set-server = utf8<br></code></pre></td></tr></table></figure><h4 id="启动mariadb"><a href="#启动mariadb" class="headerlink" title="启动mariadb"></a>启动mariadb</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start mariadb<br>systemctl enable mariadb<br></code></pre></td></tr></table></figure><h4 id="数据库默认初始化-设置密码000000"><a href="#数据库默认初始化-设置密码000000" class="headerlink" title="数据库默认初始化 (设置密码000000)"></a>数据库默认初始化 (设置密码000000)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# mysql_secure_installation<br><br>NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB<br>      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!<br><br>In order to log into MariaDB to secure it, we&#x27;ll need the current<br>password for the root user.  If you&#x27;ve just installed MariaDB, and<br>you haven&#x27;t set the root password yet, the password will be blank,<br>so you should just press enter here.<br><br>Enter current password for root (enter for none): <br>OK, successfully used password, moving on...<br><br>Setting the root password ensures that nobody can log into the MariaDB<br>root user without the proper authorisation.<br><br>Set root password? [Y/n] y<br>New password: <br>Re-enter new password: <br>Password updated successfully!<br>Reloading privilege tables..<br> ... Success!<br><br><br>By default, a MariaDB installation has an anonymous user, allowing anyone<br>to log into MariaDB without having to have a user account created for<br>them.  This is intended only for testing, and to make the installation<br>go a bit smoother.  You should remove them before moving into a<br>production environment.<br><br>Remove anonymous users? [Y/n] y<br> ... Success!<br><br>Normally, root should only be allowed to connect from &#x27;localhost&#x27;.  This<br>ensures that someone cannot guess at the root password from the network.<br><br>Disallow root login remotely? [Y/n] y<br> ... Success!<br><br>By default, MariaDB comes with a database named &#x27;test&#x27; that anyone can<br>access.  This is also intended only for testing, and should be removed<br>before moving into a production environment.<br><br>Remove test database and access to it? [Y/n] y<br> - Dropping test database...<br> ... Success!<br> - Removing privileges on test database...<br> ... Success!<br><br>Reloading the privilege tables will ensure that all changes made so far<br>will take effect immediately.<br><br>Reload privilege tables now? [Y/n] y<br> ... Success!<br><br>Cleaning up...<br><br>All done!  If you&#x27;ve completed all of the above steps, your MariaDB<br>installation should now be secure.<br><br>Thanks for using MariaDB!<br></code></pre></td></tr></table></figure><h3 id="安装rabbitmq并创建用户-controller"><a href="#安装rabbitmq并创建用户-controller" class="headerlink" title="安装rabbitmq并创建用户(controller)"></a>安装rabbitmq并创建用户(controller)</h3><p>1、功能:协调操作和状态信息服务</p><p>2、常用的消息代理软件</p><p>​RabbitMQ</p><p>​Qpid</p><p>​ZeroMQ</p><p>3.在controller节点安装RabbitMQ</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.安装RabbitMQ软件包<br>yum -y install rabbitmq-server<br>b.启动服务并设置开机自启动<br>systemctl enable rabbitmq-server<br>systemctl start rabbitmq-server<br>查看运行状态<br>systemctl status rabbitmq-server<br>c.创建用户<br>rabbitmqctl add_user openstack RABBIT_PASS<br>rabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;<br></code></pre></td></tr></table></figure><h3 id="安装memcached缓存-controller"><a href="#安装memcached缓存-controller" class="headerlink" title="安装memcached缓存(controller)"></a>安装memcached缓存(controller)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.安装memcached软件包<br>yum -y install memcached python-memcached<br>b.修改配置文件的地址否则其他网络无法访问<br>sed -i &#x27;s#127.0.0.1#172.16.100.28#g&#x27; /etc/sysconfig/memcached  ##注意IP更换成自己的<br>c.启动服务并设置开机自启动<br>systemctl start memcached.service<br>systemctl enable memcached.service<br></code></pre></td></tr></table></figure><h2 id="Keystone认证服务"><a href="#Keystone认证服务" class="headerlink" title="Keystone认证服务"></a>Keystone认证服务</h2><p>keystone认证方式:UUID,PKI,Fernet   随机生成字符串的方法</p><p>功能:认证管理,授权管理,服务目录</p><h3 id="在控制节点创建认证服务数据库-controller"><a href="#在控制节点创建认证服务数据库-controller" class="headerlink" title="在控制节点创建认证服务数据库(controller)"></a>在控制节点创建认证服务数据库(controller)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.登录mysql数据库<br>mysql -u root -p000000<br>b.创建keystone数据库<br>CREATE DATABASE keystone;<br>c.创建keystone数据库用户，使其可以对keystone数据库有完全控制权限<br>GRANT ALL PRIVILEGES ON keystone.* TO &#x27;keystone&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;KEYSTONE_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON keystone.* TO &#x27;keystone&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;KEYSTONE_DBPASS&#x27;;<br>d.退出数据库<br>exit<br></code></pre></td></tr></table></figure><h3 id="安装keystone相关软件包-和openstack-utils-noarch软件包"><a href="#安装keystone相关软件包-和openstack-utils-noarch软件包" class="headerlink" title="安装keystone相关软件包 和openstack-utils.noarch软件包"></a>安装keystone相关软件包 和openstack-utils.noarch软件包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-keystone httpd mod_wsgi openstack-utils.noarch<br></code></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/keystone/keystone.conf /etc/keystone/keystone.conf.bak<br>grep &#x27;^[a-z\[]&#x27;  /etc/keystone/keystone.conf.bak &gt; /etc/keystone/keystone.conf<br><br>openstack-config --set /etc/keystone/keystone.conf DEFAULT admin_token ADMIN_TOKEN<br>openstack-config --set /etc/keystone/keystone.conf  database connection mysql+pymysql://keystone:KEYSTONE_DBPASS@controller/keystone<br>openstack-config --set /etc/keystone/keystone.conf  token provider fernet<br></code></pre></td></tr></table></figure><h3 id="同步keystone数据库"><a href="#同步keystone数据库" class="headerlink" title="同步keystone数据库"></a>同步keystone数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">su -s /bin/sh -c &quot;keystone-manage db_sync&quot; keystone<br></code></pre></td></tr></table></figure><!--同步后进入数据库查看keystone库是否有数据--><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">如果同步失败,将/var/log/keystone/keystone.log修改属组,重启httpd<br><br>chown -R keystone.keystone /var/log/keystone/keystone.log<br>systemctl restart httpd<br></code></pre></td></tr></table></figure><h3 id="初始化fernet"><a href="#初始化fernet" class="headerlink" title="初始化fernet"></a>初始化fernet</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone<br>keystone-manage credential_setup --keystone-user keystone --keystone-group keystone<br><br><br>keystone-manage bootstrap --bootstrap-password ADMIN_PASS \<br>  --bootstrap-admin-url http://controller:5000/v3/ \<br>  --bootstrap-internal-url http://controller:5000/v3/ \<br>  --bootstrap-public-url http://controller:5000/v3/ \<br>  --bootstrap-region-id RegionOne<br></code></pre></td></tr></table></figure><h3 id="配置Apache-HTTP服务器"><a href="#配置Apache-HTTP服务器" class="headerlink" title="配置Apache HTTP服务器"></a>配置Apache HTTP服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &quot;ServerName controller&quot; &gt;&gt;/etc/httpd/conf/httpd.conf<br>ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/<br></code></pre></td></tr></table></figure><h4 id="启动HTTP服务"><a href="#启动HTTP服务" class="headerlink" title="启动HTTP服务"></a>启动HTTP服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable httpd.service<br>systemctl start httpd.service<br></code></pre></td></tr></table></figure><h3 id="创建并编辑admin-openrc文件"><a href="#创建并编辑admin-openrc文件" class="headerlink" title="创建并编辑admin-openrc文件"></a>创建并编辑admin-openrc文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# cat admin-openrc <br>export OS_PROJECT_DOMAIN_NAME=Default<br>export OS_USER_DOMAIN_NAME=Default<br>export OS_PROJECT_NAME=admin<br>export OS_USERNAME=admin<br>export OS_PASSWORD=ADMIN_PASS<br>export OS_AUTH_URL=http://controller:5000/v3<br>export OS_IDENTITY_API_VERSION=3<br>export OS_IMAGE_API_VERSION=2<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source admin-openrc<br></code></pre></td></tr></table></figure><h3 id="创建域-项目-用户-角色"><a href="#创建域-项目-用户-角色" class="headerlink" title="创建域,项目,用户,角色"></a>创建域,项目,用户,角色</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack domain create --description &quot;An Example Domain&quot; example<br><br>openstack project create --domain default \<br>  --description &quot;Service Project&quot; service<br><br>openstack project create --domain default \<br>  --description &quot;Demo Project&quot; myproject<br>  <br>openstack user create --domain default \<br>  --password MYUSER myuser<br><br>openstack role create myrole<br><br>openstack role add --project myproject --user myuser myrole<br></code></pre></td></tr></table></figure><h3 id="取消前面设置的环境变量"><a href="#取消前面设置的环境变量" class="headerlink" title="取消前面设置的环境变量"></a>取消前面设置的环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">unset OS_AUTH_URL OS_PASSWORD<br></code></pre></td></tr></table></figure><h3 id="作为admin用户和myuser用户请求身份令牌"><a href="#作为admin用户和myuser用户请求身份令牌" class="headerlink" title="作为admin用户和myuser用户请求身份令牌"></a>作为admin用户和myuser用户请求身份令牌</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack --os-auth-url http://controller:5000/v3 \<br>  --os-project-domain-name Default --os-user-domain-name Default \<br>  --os-project-name admin --os-username admin token issue \<br>  --os-password ADMIN_PASS<br>openstack --os-auth-url http://controller:5000/v3 \<br>  --os-project-domain-name Default --os-user-domain-name Default \<br>  --os-project-name myproject --os-username myuser token issue \<br>  --os-password MYUSER<br></code></pre></td></tr></table></figure><h3 id="创建并编辑demo-openrc文件"><a href="#创建并编辑demo-openrc文件" class="headerlink" title="创建并编辑demo-openrc文件"></a>创建并编辑demo-openrc文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# cat demo-openrc <br>export OS_PROJECT_DOMAIN_NAME=Default<br>export OS_USER_DOMAIN_NAME=Default<br>export OS_PROJECT_NAME=myproject<br>export OS_USERNAME=myuser<br>export OS_PASSWORD=MYUSER<br>export OS_AUTH_URL=http://controller:5000/v3<br>export OS_IDENTITY_API_VERSION=3<br>export OS_IMAGE_API_VERSION=2<br></code></pre></td></tr></table></figure><h3 id="验证环境变量是否成功"><a href="#验证环境变量是否成功" class="headerlink" title="验证环境变量是否成功"></a>验证环境变量是否成功</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">source admin-openrc<br>openstack token issue<br></code></pre></td></tr></table></figure><p>### 注意环境变量问题:先取消前面设置的环境变量,否则会报错###</p><h2 id="Glance镜像服务"><a href="#Glance镜像服务" class="headerlink" title="Glance镜像服务"></a>Glance镜像服务</h2><p><strong>glance-api</strong></p><p>接收镜像API的调用，诸如镜像发现、恢复、存储。</p><p><strong>glance-registry</strong></p><p>存储、处理和恢复镜像的元数据，元数据包括项诸如大小和类型。</p><h3 id="在控制节点创建镜像服务数据库-controller"><a href="#在控制节点创建镜像服务数据库-controller" class="headerlink" title="在控制节点创建镜像服务数据库(controller)"></a>在控制节点创建镜像服务数据库(controller)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.登录mysql数据库<br>mysql -u root -p000000<br>b.创建glance数据库<br>CREATE DATABASE glance;<br>c.创建glance数据库用户，使其可以对glance数据库有完全控制权限<br>GRANT ALL PRIVILEGES ON glance.* TO &#x27;glance&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;GLANCE_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON glance.* TO &#x27;glance&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;GLANCE_DBPASS&#x27;;<br>d.退出数据库<br>exit<br></code></pre></td></tr></table></figure><h3 id="在keystone创建glance用户关联角色"><a href="#在keystone创建glance用户关联角色" class="headerlink" title="在keystone创建glance用户关联角色"></a>在keystone创建glance用户关联角色</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack user create --domain default --password GLANCE_PASS glance<br>openstack role add --project service --user glance admin<br></code></pre></td></tr></table></figure><h3 id="在keystone创建服务和注册api"><a href="#在keystone创建服务和注册api" class="headerlink" title="在keystone创建服务和注册api"></a>在keystone创建服务和注册api</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack service create --name glance \<br>--description &quot;OpenStack Image&quot; image<br>openstack endpoint create --region RegionOne \<br>  image public http://controller:9292<br>openstack endpoint create --region RegionOne \<br>  image internal http://controller:9292<br>openstack endpoint create --region RegionOne \<br>  image admin http://controller:9292<br></code></pre></td></tr></table></figure><h3 id="安装glance软件包"><a href="#安装glance软件包" class="headerlink" title="安装glance软件包"></a>安装glance软件包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-glance<br></code></pre></td></tr></table></figure><h3 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p><strong>&#x2F;etc&#x2F;glance&#x2F;glance-api.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/glance/glance-api.conf&#123;,.bak&#125;<br>grep &#x27;^[a-z\[]&#x27; /etc/glance/glance-api.conf.bak &gt;/etc/glance/glance-api.conf<br><br>openstack-config --set /etc/glance/glance-api.conf database connection mysql+pymysql://glance:GLANCE_DBPASS@controller/glance<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken www_authenticate_uri http://controller:5000<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_url http://controller:5000<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_type password<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken project_domain_name Default<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken user_domain_name Default<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken project_name service<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken username glance<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken password GLANCE_PASS<br>openstack-config --set /etc/glance/glance-api.conf  paste_deploy flavor keystone<br>openstack-config --set /etc/glance/glance-api.conf glance_store stores file,http<br>openstack-config --set /etc/glance/glance-api.conf glance_store default_store file<br>openstack-config --set /etc/glance/glance-api.conf glance_store filesystem_store_datadir /var/lib/glance/images/<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod 777 /etc/glance/glance-registry.conf<br></code></pre></td></tr></table></figure><h3 id="同步glance数据库"><a href="#同步glance数据库" class="headerlink" title="同步glance数据库"></a>同步glance数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">su -s /bin/sh -c &quot;glance-manage db_sync&quot; glance<br></code></pre></td></tr></table></figure><!--同步后进入数据库查看glance库是否有数据--><!--忽略警告--><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable openstack-glance-api.service<br>systemctl start openstack-glance-api.service<br></code></pre></td></tr></table></figure><h3 id="下载测试镜像cirros"><a href="#下载测试镜像cirros" class="headerlink" title="下载测试镜像cirros"></a>下载测试镜像cirros</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img<br></code></pre></td></tr></table></figure><p>###下载不了多试几次###</p><h3 id="上传镜像测试"><a href="#上传镜像测试" class="headerlink" title="上传镜像测试"></a>上传镜像测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack image create &quot;cirros&quot;  --file cirros-0.3.4-x86_64-disk.img  --disk-format qcow2 --container-format bare  --public<br></code></pre></td></tr></table></figure><h2 id="Placement"><a href="#Placement" class="headerlink" title="Placement"></a>Placement</h2><h4 id="在控制节点创建placement数据库-controller"><a href="#在控制节点创建placement数据库-controller" class="headerlink" title="在控制节点创建placement数据库(controller)"></a>在控制节点创建placement数据库(controller)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.登录mysql数据库<br>mysql -u root -p000000<br>b.创建glance数据库<br>CREATE DATABASE placement;<br>c.创建glance数据库用户，使其可以对glance数据库有完全控制权限<br>GRANT ALL PRIVILEGES ON placement.* TO &#x27;placement&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;PLACEMENT_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON placement.* TO &#x27;placement&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;PLACEMENT_DBPASS&#x27;;<br>d.退出数据库<br>exit<br></code></pre></td></tr></table></figure><h4 id="在keystone创建系统用户关联角色"><a href="#在keystone创建系统用户关联角色" class="headerlink" title="在keystone创建系统用户关联角色"></a>在keystone创建系统用户关联角色</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack user create --domain default --password PLACEMENT_PASS placement<br>openstack role add --project service --user placement admin<br></code></pre></td></tr></table></figure><h4 id="在keystone上创建服务和注册api"><a href="#在keystone上创建服务和注册api" class="headerlink" title="在keystone上创建服务和注册api"></a>在keystone上创建服务和注册api</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack service create --name placement --description &quot;Placement API&quot; placement<br><br>openstack endpoint create --region RegionOne \<br>  placement public http://controller:8778<br><br>openstack endpoint create --region RegionOne \<br>  placement internal http://controller:8778<br>  <br>openstack endpoint create --region RegionOne \<br>  placement admin http://controller:8778<br></code></pre></td></tr></table></figure><h4 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-placement-api<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-2"><a href="#修改配置文件-2" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>&#x2F;etc&#x2F;placement&#x2F;placement.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/placement/placement.conf&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27; /etc/placement/placement.conf.bak &gt;/etc/placement/placement.conf<br><br>openstack-config --set /etc/placement/placement.conf placement_database connection mysql+pymysql://placement:PLACEMENT_DBPASS@controller/placement <br>openstack-config --set /etc/placement/placement.conf api auth_strategy keystone<br>openstack-config --set /etc/placement/placement.conf keystone_authtoken auth_url http://controller:5000/v3<br>openstack-config --set /etc/placement/placement.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/placement/placement.conf keystone_authtoken auth_type password<br>openstack-config --set /etc/placement/placement.conf keystone_authtoken project_domain_name Default<br>openstack-config --set /etc/placement/placement.conf keystone_authtoken user_domain_name Default<br>openstack-config --set /etc/placement/placement.conf keystone_authtoken project_name service<br>openstack-config --set /etc/placement/placement.conf keystone_authtoken username placement<br>openstack-config --set /etc/placement/placement.conf keystone_authtoken password PLACEMENT_PASS<br></code></pre></td></tr></table></figure><h4 id="同步数据库"><a href="#同步数据库" class="headerlink" title="同步数据库"></a>同步数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">su -s /bin/sh -c &quot;placement-manage db sync&quot; placement<br></code></pre></td></tr></table></figure><h4 id="编辑00-placement-api-conf文件"><a href="#编辑00-placement-api-conf文件" class="headerlink" title="编辑00-placement-api.conf文件"></a>编辑00-placement-api.conf文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##在结尾添加</span></span><br>vim /etc/httpd/conf.d/00-placement-api.conf<br>....<br>&lt;Directory /usr/bin&gt;<br>&lt;IfVersion &gt;= 2.4&gt;<br>   Require all granted<br>&lt;/IfVersion&gt;<br>&lt;IfVersion &lt; 2.4&gt;<br>   Order allow,deny<br>   Allow from all<br>&lt;/IfVersion&gt;<br>&lt;/Directory&gt;<br></code></pre></td></tr></table></figure><h4 id="重启httd服务"><a href="#重启httd服务" class="headerlink" title="重启httd服务"></a>重启httd服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart httpd<br></code></pre></td></tr></table></figure><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller placement]# placement-status upgrade check<br>+----------------------------------+<br>| Upgrade Check Results            |<br>+----------------------------------+<br>| Check: Missing Root Provider IDs |<br>| Result: Success                  |<br>| Details: None                    |<br>+----------------------------------+<br>| Check: Incomplete Consumers      |<br>| Result: Success                  |<br>| Details: None                    |<br>+----------------------------------+<br></code></pre></td></tr></table></figure><h2 id="Nova计算服务"><a href="#Nova计算服务" class="headerlink" title="Nova计算服务"></a>Nova计算服务</h2><p>nova-api:接受响应所有的计算服务请求，管理虚拟机(云主机)生命周期</p><p>nova-compute (多个):真正管理虚拟机(nova-compute调用libvirt)</p><p>nova-scheduler:nova调度器（挑选出最合适的nova-compute来创建虚机)</p><p>nova-conductor:帮助nova-compute代理修改数据库中虚拟机的状态</p><p>nova-network早期openstack版本管理虚拟机的网络(已弃用,neutron)</p><p>nova-consoleauth和nova-novncproxy: web版的vnc来直接操作云主机</p><p>novncproxy:web版vnc客户端</p><p>nova-api-metadata:接受来自虚拟机发送的元数据请求(配合neutron-metadata-agent,来虚拟机定制化)</p><h3 id="controller-3"><a href="#controller-3" class="headerlink" title="controller"></a>controller</h3><h4 id="在控制节点创建nova服务数据库-controller"><a href="#在控制节点创建nova服务数据库-controller" class="headerlink" title="在控制节点创建nova服务数据库(controller)"></a>在控制节点创建nova服务数据库(controller)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.登录mysql数据库<br>mysql -u root -p000000<br>b.创建nova_api,nova,nova_cell0数据库<br>CREATE DATABASE nova_api;<br>CREATE DATABASE nova;<br>CREATE DATABASE nova_cell0;<br>c.创建nova_api，nova数据库用户，使其可以对nova_api,nova数据库有完全控制权限<br>GRANT ALL PRIVILEGES ON nova_api.* TO &#x27;nova&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON nova_api.* TO &#x27;nova&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON nova.* TO &#x27;nova&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON nova.* TO &#x27;nova&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON nova_cell0.* TO &#x27;nova&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON nova_cell0.* TO &#x27;nova&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;<br>d.退出数据库<br>exit<br></code></pre></td></tr></table></figure><h4 id="在keystone创建系统用户（glance，nova，neutron）关联角色"><a href="#在keystone创建系统用户（glance，nova，neutron）关联角色" class="headerlink" title="在keystone创建系统用户（glance，nova，neutron）关联角色"></a>在keystone创建系统用户（glance，nova，neutron）关联角色</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack user create --domain default --password NOVA_PASS nova<br>openstack role add --project service --user nova admin<br></code></pre></td></tr></table></figure><h4 id="在keystone上创建服务和注册api-1"><a href="#在keystone上创建服务和注册api-1" class="headerlink" title="在keystone上创建服务和注册api"></a>在keystone上创建服务和注册api</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack service create --name nova --description &quot;OpenStack Compute&quot; compute<br>openstack endpoint create --region RegionOne \<br>  compute public http://controller:8774/v2.1<br>openstack endpoint create --region RegionOne \<br>  compute internal http://controller:8774/v2.1<br>openstack endpoint create --region RegionOne \<br>  compute admin http://controller:8774/v2.1<br></code></pre></td></tr></table></figure><h4 id="安装相关服务软件包"><a href="#安装相关服务软件包" class="headerlink" title="安装相关服务软件包"></a>安装相关服务软件包</h4><p>openstack-nova-conductor 负责数据库<br>openstack-nova-novncproxy  负责云主机连接<br>openstack-nova-scheduler  负责调度调度</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-nova-api openstack-nova-conductor openstack-nova-novncproxy openstack-nova-scheduler<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-3"><a href="#修改配置文件-3" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>&#x2F;etc&#x2F;nova&#x2F;nova.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/nova/nova.conf&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27; /etc/nova/nova.conf.bak &gt;/etc/nova/nova.conf<br><br>openstack-config --set /etc/nova/nova.conf DEFAULT enabled_apis osapi_compute,metadata<br>openstack-config --set /etc/nova/nova.conf api_database connection mysql+pymysql://nova:NOVA_DBPASS@controller/nova_api<br>openstack-config --set /etc/nova/nova.conf database connection mysql+pymysql://nova:NOVA_DBPASS@controller/nova<br>openstack-config --set /etc/nova/nova.conf DEFAULT transport_url rabbit://openstack:RABBIT_PASS@controller:5672/<br>openstack-config --set /etc/nova/nova.conf api auth_strategy keystone<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken www_authenticate_uri http://controller:5000/<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_url http://controller:5000/<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_type password<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken project_domain_name Default<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken user_domain_name Default<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken project_name service<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken username nova<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken password NOVA_PASS<br>openstack-config --set /etc/nova/nova.conf DEFAULT my_ip 172.16.100.28###替换自己的IP!!!<br>openstack-config --set /etc/nova/nova.conf DEFAULT use_neutron True<br>openstack-config --set /etc/nova/nova.conf DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver<br>openstack-config --set /etc/nova/nova.conf vnc enabled true<br>openstack-config --set /etc/nova/nova.conf vnc server_listen &#x27;$my_ip&#x27;<br>openstack-config --set /etc/nova/nova.conf vnc server_proxyclient_address &#x27;$my_ip&#x27;<br>openstack-config --set /etc/nova/nova.conf glance api_servers http://controller:9292<br>openstack-config --set /etc/nova/nova.conf oslo_concurrency lock_path /var/lib/nova/tmp<br>openstack-config --set /etc/nova/nova.conf placement region_name RegionOne<br>openstack-config --set /etc/nova/nova.conf placement project_domain_name Default<br>openstack-config --set /etc/nova/nova.conf placement project_name service<br>openstack-config --set /etc/nova/nova.conf placement auth_type password<br>openstack-config --set /etc/nova/nova.conf placement user_domain_name Default<br>openstack-config --set /etc/nova/nova.conf placement auth_url http://controller:5000/v3<br>openstack-config --set /etc/nova/nova.conf placement username placement<br>openstack-config --set /etc/nova/nova.conf placement password PLACEMENT_PASS<br></code></pre></td></tr></table></figure><h4 id="同步数据库-1"><a href="#同步数据库-1" class="headerlink" title="同步数据库"></a>同步数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">su -s /bin/sh -c &quot;nova-manage api_db sync&quot; nova<br>su -s /bin/sh -c &quot;nova-manage cell_v2 map_cell0&quot; nova<br>su -s /bin/sh -c &quot;nova-manage cell_v2 create_cell --name=cell1 --verbose&quot; nova<br>su -s /bin/sh -c &quot;nova-manage db sync&quot; nova<br></code></pre></td></tr></table></figure><!--同步后进入数据库查看nova库是否有数据--><!--忽略警告--><h4 id="验证-nova-cell0-和-cell1-是否正确注册"><a href="#验证-nova-cell0-和-cell1-是否正确注册" class="headerlink" title="验证 nova cell0 和 cell1 是否正确注册"></a>验证 nova cell0 和 cell1 是否正确注册</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# su -s /bin/sh -c &quot;nova-manage cell_v2 list_cells&quot; nova<br>+-------+--------------------------------------+------------------------------------------+-------------------------------------------------+----------+<br>|  Name |                 UUID                 |              Transport URL               |               Database Connection               | Disabled |<br>+-------+--------------------------------------+------------------------------------------+-------------------------------------------------+----------+<br>| cell0 | 00000000-0000-0000-0000-000000000000 |                  none:/                  | mysql+pymysql://nova:****@controller/nova_cell0 |  False   |<br>| cell1 | e9c5a4d7-880f-4783-958b-85d44bad22b1 | rabbit://openstack:****@controller:5672/ |    mysql+pymysql://nova:****@controller/nova    |  False   |<br>+-------+--------------------------------------+------------------------------------------+-------------------------------------------------+----------+<br></code></pre></td></tr></table></figure><h4 id="启动服务-1"><a href="#启动服务-1" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable \<br>    openstack-nova-api.service \<br>    openstack-nova-scheduler.service \<br>    openstack-nova-conductor.service \<br>    openstack-nova-novncproxy.service<br> systemctl start \<br>    openstack-nova-api.service \<br>    openstack-nova-scheduler.service \<br>    openstack-nova-conductor.service \<br>    openstack-nova-novncproxy.service<br></code></pre></td></tr></table></figure><h3 id="compute-3"><a href="#compute-3" class="headerlink" title="compute"></a>compute</h3><h4 id="安装软件包-1"><a href="#安装软件包-1" class="headerlink" title="安装软件包"></a>安装软件包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-nova-compute openstack-utils.noarch<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-4"><a href="#修改配置文件-4" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>&#x2F;etc&#x2F;nova&#x2F;nova.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/nova/nova.conf&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27; /etc/nova/nova.conf.bak &gt;/etc/nova/nova.conf<br><br>openstack-config --set /etc/nova/nova.conf DEFAULT enabled_apis osapi_compute,metadata<br>openstack-config --set /etc/nova/nova.conf DEFAULT transport_url rabbit://openstack:RABBIT_PASS@controller<br>openstack-config --set /etc/nova/nova.conf api auth_strategy keystone<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken www_authenticate_uri http://controller:5000<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_url http://controller:5000/<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_type password<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken project_domain_name Default<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken user_domain_name Default<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken project_name service<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken username nova<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken password NOVA_PASS<br>openstack-config --set /etc/nova/nova.conf DEFAULT my_ip 172.16.100.29   ###替换自己compute IP<br>openstack-config --set /etc/nova/nova.conf DEFAULT use_neutron True<br>openstack-config --set /etc/nova/nova.conf DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver<br>openstack-config --set /etc/nova/nova.conf vnc enabled True<br>openstack-config --set /etc/nova/nova.conf vnc vncserver_listen 0.0.0.0<br>openstack-config --set /etc/nova/nova.conf vnc vncserver_proxyclient_address &#x27;$my_ip&#x27;<br>openstack-config --set /etc/nova/nova.conf vnc novncproxy_base_url http://172.16.100.28:6080/vnc_auto.html<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##服务器组件监听所有的 IP 地址，而代理组件仅仅监听计算节点管理网络接口的 IP 地址。基本的 URL 指示您可以使用 web 浏览器访问位于该计算节点上实例的远程控制台的位置。</span></span><br>openstack-config --set /etc/nova/nova.conf glance api_servers http://controller:9292<br>openstack-config --set /etc/nova/nova.conf oslo_concurrency lock_path /var/lib/nova/tmp<br>openstack-config --set /etc/nova/nova.conf placement region_name RegionOne<br>openstack-config --set /etc/nova/nova.conf placement project_domain_name Default<br>openstack-config --set /etc/nova/nova.conf placement project_name service<br>openstack-config --set /etc/nova/nova.conf placement auth_type password<br>openstack-config --set /etc/nova/nova.conf placement user_domain_name Default<br>openstack-config --set /etc/nova/nova.conf placement auth_url http://controller:5000/v3<br>openstack-config --set /etc/nova/nova.conf placement username placement<br>openstack-config --set /etc/nova/nova.conf placement password PLACEMENT_PASS<br></code></pre></td></tr></table></figure><h4 id="确定您的计算节点是否支持虚拟机的硬件加速"><a href="#确定您的计算节点是否支持虚拟机的硬件加速" class="headerlink" title="确定您的计算节点是否支持虚拟机的硬件加速"></a>确定您的计算节点是否支持虚拟机的硬件加速</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">egrep -c &#x27;(vmx|svm)&#x27; /proc/cpuinfo<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##如不为0，则您的计算节点支持硬件加速，这通常不需要额外的配置</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##如果返回值为0，则您的计算节点不支持硬件加速，您必须配置libvirt为使用 QEMU 而不是 KVM，执行以下命令！</span></span><br>openstack-config --set /etc/nova/nova.conf libvirt virt_type qemu<br></code></pre></td></tr></table></figure><h4 id="启动服务-2"><a href="#启动服务-2" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable libvirtd.service openstack-nova-compute.service<br>systemctl start libvirtd.service openstack-nova-compute.service<br></code></pre></td></tr></table></figure><h3 id="在控制节点查看"><a href="#在控制节点查看" class="headerlink" title="在控制节点查看"></a>在控制节点查看</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# openstack compute service list --service nova-compute<br>+----+--------------+---------+------+---------+-------+----------------------------+<br>| ID | Binary       | Host    | Zone | Status  | State | Updated At                 |<br>+----+--------------+---------+------+---------+-------+----------------------------+<br>| 10 | nova-compute | compute | nova | enabled | up    | 2021-12-17T06:59:11.000000 |<br>+----+--------------+---------+------+---------+-------+----------------------------+<br></code></pre></td></tr></table></figure><h3 id="发现计算节点主机"><a href="#发现计算节点主机" class="headerlink" title="发现计算节点主机"></a>发现计算节点主机</h3><p><strong>###添加新计算节点时，您必须在控制器节点上运行以注册这些新计算节点</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# su -s /bin/sh -c &quot;nova-manage cell_v2 discover_hosts --verbose&quot; nova<br>Found 2 cell mappings.<br>Skipping cell0 since it does not contain hosts.<br>Getting computes from cell &#x27;cell1&#x27;: e9c5a4d7-880f-4783-958b-85d44bad22b1<br>Checking host mapping for compute host &#x27;compute&#x27;: b5a4c6b3-ad48-4e74-b5f4-76cb6f55f8d3<br>Creating host mapping for compute host &#x27;compute&#x27;: b5a4c6b3-ad48-4e74-b5f4-76cb6f55f8d3<br>Found 1 unmapped computes in cell: e9c5a4d7-880f-4783-958b-85d44bad22b1<br></code></pre></td></tr></table></figure><p><strong>###或者配置适当的间隔执行</strong> </p><p>#这里配置的是300秒，可以自行设置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack-config --set /etc/nova/nova.conf scheduler discover_hosts_in_cells_interval 300<br></code></pre></td></tr></table></figure><h3 id="查看nova是否正常"><a href="#查看nova是否正常" class="headerlink" title="查看nova是否正常"></a>查看nova是否正常</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# nova service-list<br>+--------------------------------------+----------------+------------+----------+---------+-------+----------------------------+-----------------+-------------+<br>| Id                                   | Binary         | Host       | Zone     | Status  | State | Updated_at                 | Disabled Reason | Forced down |<br>+--------------------------------------+----------------+------------+----------+---------+-------+----------------------------+-----------------+-------------+<br>| c606ddf6-2213-459e-b07e-e8219c9c24fc | nova-conductor | controller | internal | enabled | up    | 2021-12-17T07:13:17.000000 | -               | False       |<br>| 6608eb09-0130-4cdd-8311-f53082e14508 | nova-scheduler | controller | internal | enabled | up    | 2021-12-17T07:13:18.000000 | -               | False       |<br>| 2012503b-9c09-4575-96e1-991b1f8dbf5e | nova-compute   | compute    | nova     | enabled | up    | 2021-12-17T07:13:21.000000 | -               | False       |<br>+--------------------------------------+----------------+------------+----------+---------+-------+----------------------------+-----------------+-------------+<br><br></code></pre></td></tr></table></figure><h2 id="Neutron网络服务"><a href="#Neutron网络服务" class="headerlink" title="Neutron网络服务"></a>Neutron网络服务</h2><p>neutron-server端(9696)api:接受和响应外部的网络管理请求</p><p>neutron-linuxbridge-agent :负责创建桥接网卡</p><p>neutron-dhcp-agent:负责分配IP</p><p>neutron-metadata-agent:配合nova-metadata-api实现虚拟机的定制化操作</p><p>L3-agent：实现三层网络vxlan(网络层)</p><h3 id="controller-4"><a href="#controller-4" class="headerlink" title="controller"></a>controller</h3><h4 id="在控制节点创建neutron服务数据库-controller"><a href="#在控制节点创建neutron服务数据库-controller" class="headerlink" title="在控制节点创建neutron服务数据库(controller)"></a>在控制节点创建neutron服务数据库(controller)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.登录mysql数据库<br>mysql -u root -p000000<br>b.创建neutron数据库<br>CREATE DATABASE neutron;<br>c.创建neutron数据库用户，使其可以对neutron数据库有完全控制权限<br>GRANT ALL PRIVILEGES ON neutron.* TO &#x27;neutron&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;NEUTRON_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON neutron.* TO &#x27;neutron&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;NEUTRON_DBPASS&#x27;;<br>d.退出数据库<br>exit<br></code></pre></td></tr></table></figure><h4 id="在keystone创建系统用户-glance-nova-neutron-关联角色"><a href="#在keystone创建系统用户-glance-nova-neutron-关联角色" class="headerlink" title="在keystone创建系统用户(glance, nova, neutron)关联角色"></a>在keystone创建系统用户(glance, nova, neutron)关联角色</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack user create --domain default --password NEUTRON_PASS neutron<br>openstack role add --project service --user neutron admin<br></code></pre></td></tr></table></figure><h4 id="在keystone上创建服务和注册api-2"><a href="#在keystone上创建服务和注册api-2" class="headerlink" title="在keystone上创建服务和注册api"></a>在keystone上创建服务和注册api</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"> openstack service create --name neutron \<br>  --description &quot;OpenStack Networking&quot; network<br>openstack endpoint create --region RegionOne \<br>  network public http://controller:9696<br>openstack endpoint create --region RegionOne \<br>  network internal http://controller:9696<br>openstack endpoint create --region RegionOne \<br>  network admin http://controller:9696<br></code></pre></td></tr></table></figure><h4 id="安装服务相应软件包"><a href="#安装服务相应软件包" class="headerlink" title="安装服务相应软件包"></a>安装服务相应软件包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum  -y install openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-5"><a href="#修改配置文件-5" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>配置服务组件</strong></p><p><strong>a：&#x2F;etc&#x2F;neutron&#x2F;neutron.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/neutron.conf&#123;,.bak&#125;<br>grep &#x27;^[a-z\[]&#x27; /etc/neutron/neutron.conf.bak &gt;/etc/neutron/neutron.conf<br><br>openstack-config --set /etc/neutron/neutron.conf database connection mysql+pymysql://neutron:NEUTRON_DBPASS@controller/neutron<br>openstack-config --set /etc/neutron/neutron.conf DEFAULT core_plugin ml2<br>openstack-config --set /etc/neutron/neutron.conf DEFAULT service_plugins  <br>openstack-config --set /etc/neutron/neutron.conf DEFAULT transport_url rabbit://openstack:RABBIT_PASS@controller<br>openstack-config --set /etc/neutron/neutron.conf DEFAULT auth_strategy keystone<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken www_authenticate_uri http://controller:5000<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_url http://controller:5000<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_type password<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_domain_name default<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken user_domain_name default<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_name service<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken username neutron<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken password NEUTRON_PASS<br>openstack-config --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_status_changes True<br>openstack-config --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_data_changes True<br>openstack-config --set /etc/neutron/neutron.conf  nova auth_url http://controller:5000<br>openstack-config --set /etc/neutron/neutron.conf  nova auth_type password<br>openstack-config --set /etc/neutron/neutron.conf  nova project_domain_name default<br>openstack-config --set /etc/neutron/neutron.conf  nova user_domain_name default<br>openstack-config --set /etc/neutron/neutron.conf  nova region_name RegionOne<br>openstack-config --set /etc/neutron/neutron.conf  nova project_name service<br>openstack-config --set /etc/neutron/neutron.conf  nova username nova<br>openstack-config --set /etc/neutron/neutron.conf  nova password NOVA_PASS<br>openstack-config --set /etc/neutron/neutron.conf  oslo_concurrency lock_path /var/lib/neutron/tmp<br></code></pre></td></tr></table></figure><p><strong>配置 Modular Layer 2 (ML2) 插件</strong></p><p><strong>b: &#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;ml2_conf.ini</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/plugins/ml2/ml2_conf.ini&#123;,.bak&#125;<br>grep &#x27;^[a-z\[]&#x27; /etc/neutron/plugins/ml2/ml2_conf.ini.bak &gt;/etc/neutron/plugins/ml2/ml2_conf.ini<br><br>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 type_drivers flat,vlan<br>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types <br>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers linuxbridge<br>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 extension_drivers port_security<br>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_flat flat_networks provider<br>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup enable_ipset True<br></code></pre></td></tr></table></figure><p><strong>配置Linuxbridge代理</strong></p><p><strong>c: &#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;linuxbridge_agent.ini</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27; /etc/neutron/plugins/ml2/linuxbridge_agent.ini.bak &gt;/etc/neutron/plugins/ml2/linuxbridqe_agent.ini<br><br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini linux_bridge physical_interface_mappings provider:ens3 ###替换自己的网卡名称<br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan enable_vxlan False<br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup enable_security_group True<br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.IptablesFirewallDriver<br></code></pre></td></tr></table></figure><p><strong>配置DHCP代理</strong></p><p><strong>d: &#x2F;etc&#x2F;neutron&#x2F;dhcp_agent.ini</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/dhcp_agent.ini&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27;  /etc/neutron/dhcp_agent.ini.bak &gt;/etc/neutron/dhcp_agent.ini<br><br>openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT interface_driver linuxbridge<br>openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT dhcp_driver neutron.agent.linux.dhcp.Dnsmasq<br>openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT enable_isolated_metadata True<br></code></pre></td></tr></table></figure><h4 id="配置内核"><a href="#配置内核" class="headerlink" title="配置内核"></a>配置内核</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo -e &quot;net.bridge.bridge-nf-call-iptables = 1\nnet.bridge.bridge-nf-call-ip6tables = 1&quot; &gt;&gt; /etc/sysctl.conf<br><br>[root@controller ~]# modprobe br_netfilter<br>[root@controller ~]# sysctl -p<br>net.bridge.bridge-nf-call-iptables = 1<br>net.bridge.bridge-nf-call-ip6tables = 1<br></code></pre></td></tr></table></figure><p><strong>配置元数据代理</strong></p><p><strong>e：&#x2F;etc&#x2F;neutron&#x2F;metadata_agent.ini</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/metadata_agent.ini&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27;  /etc/neutron/metadata_agent.ini.bak &gt; /etc/neutron/metadata_agent.ini<br><br>openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT nova_metadata_host controller<br>openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT metadata_proxy_shared_secret METADATA_SECRET<br></code></pre></td></tr></table></figure><p><strong>添加控制节点网络服务</strong></p><p><strong>f：&#x2F;etc&#x2F;nova&#x2F;nova.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack-config --set  /etc/nova/nova.conf neutron url http://controller:9696<br>openstack-config --set  /etc/nova/nova.conf neutron auth_url http://controller:5000<br>openstack-config --set  /etc/nova/nova.conf neutron auth_type  password<br>openstack-config --set  /etc/nova/nova.conf neutron project_domain_name  default<br>openstack-config --set  /etc/nova/nova.conf neutron user_domain_name  default<br>openstack-config --set  /etc/nova/nova.conf neutron region_name   RegionOne<br>openstack-config --set  /etc/nova/nova.conf neutron project_name  service<br>openstack-config --set  /etc/nova/nova.conf neutron username  neutron<br>openstack-config --set  /etc/nova/nova.conf neutron password  NEUTRON_PASS<br>openstack-config --set  /etc/nova/nova.conf neutron service_metadata_proxy  True<br>openstack-config --set  /etc/nova/nova.conf neutron metadata_proxy_shared_secret  METADATA_SECRET<br></code></pre></td></tr></table></figure><h4 id="同步neutron数据库"><a href="#同步neutron数据库" class="headerlink" title="同步neutron数据库"></a><strong>同步neutron数据库</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini<br>su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf \<br>  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron<br></code></pre></td></tr></table></figure><!--可以ok即成功--><!--同步后进入数据库查看neutron库是否有数据--><!--忽略警告--><h4 id="启动服务-3"><a href="#启动服务-3" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart openstack-nova-api.service<br>systemctl enable neutron-server.service \<br>  neutron-linuxbridge-agent.service neutron-dhcp-agent.service \<br>  neutron-metadata-agent.service<br>systemctl start neutron-server.service \<br>  neutron-linuxbridge-agent.service neutron-dhcp-agent.service \<br>  neutron-metadata-agent.service<br></code></pre></td></tr></table></figure><h3 id="compute-4"><a href="#compute-4" class="headerlink" title="compute"></a>compute</h3><h4 id="在计算节点安装组件-compute"><a href="#在计算节点安装组件-compute" class="headerlink" title="在计算节点安装组件(compute)"></a>在计算节点安装组件(compute)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-neutron-linuxbridge ebtables ipset<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-6"><a href="#修改配置文件-6" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>a.&#x2F;etc&#x2F;neutron&#x2F;neutron.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/neutron.conf&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27; /etc/neutron/neutron.conf.bak &gt;/etc/neutron/neutron.conf<br><br>openstack-config --set /etc/neutron/neutron.conf DEFAULT transport_url rabbit://openstack:RABBIT_PASS@controller<br>openstack-config --set /etc/neutron/neutron.conf DEFAULT auth_strategy  keystone<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken www_authenticate_uri http://controller:5000<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_url http://controller:5000<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_type    password<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_domain_name  default<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken user_domain_name    default<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_name    service<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken username    neutron<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken password    NEUTRON_PASS<br>openstack-config --set /etc/neutron/neutron.conf oslo_concurreny lock_path    /var/lib/neutron/tmp<br></code></pre></td></tr></table></figure><p><strong>配置Linuxbridge代理</strong></p><p><strong>b: &#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;linuxbridge_agent.ini</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27; /etc/neutron/plugins/ml2/linuxbridge_agent.ini.bak &gt;/etc/neutron/plugins/ml2/linuxbridqe_agent.ini<br><br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini linux_bridge physical_interface_mappings provider:ens3  ###替换自己的网卡名称<br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan enable_vxlan False<br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup enable_security_group True<br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroupfirewall_driver neutron.agent.linux.iptables_firewall.IptablesFirewallDriver<br></code></pre></td></tr></table></figure><h4 id="配置内核-1"><a href="#配置内核-1" class="headerlink" title="配置内核"></a>配置内核</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo -e &quot;net.bridge.bridge-nf-call-iptables = 1\nnet.bridge.bridge-nf-call-ip6tables = 1&quot; &gt;&gt; /etc/sysctl.conf<br><br>[root@controller ~]# modprobe br_netfilter<br>[root@controller ~]# sysctl -p<br>net.bridge.bridge-nf-call-iptables = 1<br>net.bridge.bridge-nf-call-ip6tables = 1<br></code></pre></td></tr></table></figure><p><strong>添加计算节点网络服务</strong></p><p><strong>c：&#x2F;etc&#x2F;nova&#x2F;nova.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack-config --set  /etc/nova/nova.conf neutron url  http://controller:9696<br>openstack-config --set  /etc/nova/nova.conf neutron auth_url http://controller:5000<br>openstack-config --set  /etc/nova/nova.conf neutron auth_type  password<br>openstack-config --set  /etc/nova/nova.conf neutron project_domain_name  default<br>openstack-config --set  /etc/nova/nova.conf neutron user_domain_name   default<br>openstack-config --set  /etc/nova/nova.conf neutron region_name   RegionOne<br>openstack-config --set  /etc/nova/nova.conf neutron project_name  service<br>openstack-config --set  /etc/nova/nova.conf neutron username  neutron<br>openstack-config --set  /etc/nova/nova.conf neutron password  NEUTRON_PASS<br></code></pre></td></tr></table></figure><h4 id="启动服务-4"><a href="#启动服务-4" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart openstack-nova-compute.service<br>systemctl enable neutron-linuxbridge-agent.service<br>systemctl start neutron-linuxbridge-agent.service<br></code></pre></td></tr></table></figure><h3 id="查看服务（controller）"><a href="#查看服务（controller）" class="headerlink" title="查看服务（controller）"></a>查看服务（controller）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# openstack network agent list<br>+--------------------------------------+--------------------+------------+-------------------+-------+-------+---------------------------+<br>| ID                                   | Agent Type         | Host       | Availability Zone | Alive | State | Binary                    |<br>+--------------------------------------+--------------------+------------+-------------------+-------+-------+---------------------------+<br>| 1a758c8f-87b1-4e43-9f7b-445a8d38c454 | DHCP agent         | controller | nova              | :-)   | UP    | neutron-dhcp-agent        |<br>| 590d524d-6188-4e09-a5f8-25aa83568192 | Linux bridge agent | controller | None              | :-)   | UP    | neutron-linuxbridge-agent |<br>| add2e0e2-71ba-4e29-b454-77435f1266e2 | Metadata agent     | controller | None              | :-)   | UP    | neutron-metadata-agent    |<br>| fad9d9ca-85b4-4d12-9bf8-852f59e1ed0f | Linux bridge agent | compute    | None              | :-)   | UP    | neutron-linuxbridge-agent |<br>+--------------------------------------+--------------------+------------+-------------------+-------+-------+---------------------------+<br><br></code></pre></td></tr></table></figure><h2 id="Dashboard服务"><a href="#Dashboard服务" class="headerlink" title="Dashboard服务"></a>Dashboard服务</h2><p>(根据情况确定安装控制节点还是计算节点）</p><blockquote><p>此次安装在compute上</p></blockquote><h3 id="安装openstack-dashboard"><a href="#安装openstack-dashboard" class="headerlink" title="安装openstack-dashboard"></a>安装openstack-dashboard</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-dashboard<br></code></pre></td></tr></table></figure><h3 id="修改配置文件-7"><a href="#修改配置文件-7" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p><strong>&#x2F;etc&#x2F;openstack-dashboard&#x2F;local_settings</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在 controller 节点上配置仪表盘以使用 OpenStack 服务</span><br>OPENSTACK_HOST = &quot;controller&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">允许所有主机访问仪表板</span><br>ALLOWED_HOSTS = [&#x27;*&#x27;, ]<br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置 memcached 会话存储服务</span><br>CACHES = &#123;<br>  &#x27;default&#x27;: &#123;<br>        &#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.memcached.MemcachedCache&#x27;,<br>         &#x27;LOCATION&#x27;: &#x27;controller:11211&#x27;,<br>   &#125;<br>&#125;<br>SESSION_ENGINE = &#x27;django.contrib.sessions.backends.cache&#x27;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">启用第3版认证API</span><br>OPENSTACK_KEYSTONE_URL = &quot;http://%s:5000/v3&quot; % OPENSTACK_HOST<br><span class="hljs-meta prompt_">#</span><span class="language-bash">启用对域的支持</span><br>OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True<br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置API版本</span><br>OPENSTACK_API_VERSIONS = &#123;<br>   &quot;identity&quot;: 3,<br>    &quot;image&quot;: 2,<br>      &quot;volume&quot;: 3,<br>&#125;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">WEB界面配置</span><br>WEBROOT = &quot;/dashboard&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">通过仪表盘创建用户时的默认域配置为 default</span><br>OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = &quot;Default&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">通过仪表盘创建的用户默认角色配置为 user</span><br>OPENSTACK_KEYSTONE_DEFAULT_ROLE = &quot;user&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果您选择网络参数1，禁3层网络服务：</span><br>OPENSTACK_NEUTRON_NETWORK = &#123;<br>    ...<br>&#x27;enable_router&#x27;: False,<br>&#x27;enable_quotas&#x27;: False,<br>&#x27;enable_distributed_router&#x27;: False,<br>&#x27;enable_ha_router&#x27;: False,<br>&#x27;enable_lb&#x27;: False,<br>&#x27;enable_firewall&#x27;: False,<br>&#x27;enable_vpn&#x27;: False,<br>&#x27;enable_fip_topology_check&#x27;: False,<br>&#125;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">可以选择性地配置时区：</span><br>TIME_ZONE = &quot;Asia/Shanghai&quot;<br></code></pre></td></tr></table></figure><p><strong>&#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;openstack-dashboard.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sed -i &quot;4i WSGIApplicationGroup %&#123;GLOBAL&#125;&quot; /etc/httpd/conf.d/openstack-dashboard.conf<br></code></pre></td></tr></table></figure><h3 id="启动服务-5"><a href="#启动服务-5" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart httpd.service<br></code></pre></td></tr></table></figure><h3 id="控制节点"><a href="#控制节点" class="headerlink" title="控制节点"></a>控制节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart memcached.service<br></code></pre></td></tr></table></figure><h2 id="Cinder块存储服务"><a href="#Cinder块存储服务" class="headerlink" title="Cinder块存储服务"></a>Cinder块存储服务</h2><p>cinder-volume LVM,nfs,gfs,ceph</p><p>cinder-api:接收外部的api请求</p><p>cinder-volume:提供存储空间</p><p>cinder-scheduler调度器,决定将要分配的空间由哪一个cinder-volume提供</p><p>cinder-backup备份存储</p><h3 id="controller-5"><a href="#controller-5" class="headerlink" title="controller"></a>controller</h3><h4 id="在控制节点创建Cinder服务数据库-controller"><a href="#在控制节点创建Cinder服务数据库-controller" class="headerlink" title="在控制节点创建Cinder服务数据库(controller)"></a>在控制节点创建Cinder服务数据库(controller)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.登录mysql数据库<br>mysql -u root -p000000<br>b.创建cinder数据库<br>CREATE DATABASE cinder;<br>c.创建cinder数据库用户，使其可以对cinder数据库有完全控制权限<br>GRANT ALL PRIVILEGES ON cinder.* TO &#x27;cinder&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;CINDER_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON cinder.* TO &#x27;cinder&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;CINDER_DBPASS&#x27;;<br>d.退出数据库<br>exit<br></code></pre></td></tr></table></figure><h4 id="在keystone创建系统用户-glance-nova-neutron-cinder-关联角色"><a href="#在keystone创建系统用户-glance-nova-neutron-cinder-关联角色" class="headerlink" title="在keystone创建系统用户(glance, nova, neutron,cinder)关联角色"></a>在keystone创建系统用户(glance, nova, neutron,cinder)关联角色</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack user create --domain default --password CINDER_PASS cinder<br>openstack role add --project service --user cinder admin<br></code></pre></td></tr></table></figure><h4 id="在keystone上创建服务和注册api-3"><a href="#在keystone上创建服务和注册api-3" class="headerlink" title="在keystone上创建服务和注册api"></a>在keystone上创建服务和注册api</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack service create --name cinderv2 \<br>  --description &quot;OpenStack Block Storage&quot; volumev2<br>openstack service create --name cinderv3 \<br>  --description &quot;OpenStack Block Storage&quot; volumev3<br>  <br>openstack endpoint create --region RegionOne \<br>  volumev2 public http://controller:8776/v2/%\(project_id\)s<br>openstack endpoint create --region RegionOne \<br>  volumev2 internal http://controller:8776/v2/%\(project_id\)s<br>openstack endpoint create --region RegionOne \<br>  volumev2 admin http://controller:8776/v2/%\(project_id\)s<br>openstack endpoint create --region RegionOne \<br>  volumev3 public http://controller:8776/v3/%\(project_id\)s<br>openstack endpoint create --region RegionOne \<br>  volumev3 internal http://controller:8776/v3/%\(project_id\)s<br>openstack endpoint create --region RegionOne \<br>  volumev3 admin http://controller:8776/v3/%\(project_id\)s<br></code></pre></td></tr></table></figure><h4 id="安装服务相应软件包-1"><a href="#安装服务相应软件包-1" class="headerlink" title="安装服务相应软件包"></a>安装服务相应软件包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-cinder<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-8"><a href="#修改配置文件-8" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>&#x2F;etc&#x2F;cinder&#x2F;cinder.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/cinder/cinder.conf&#123;,.bak&#125;<br>grep -Ev &#x27;^$|#&#x27; /etc/cinder/cinder.conf.bak &gt;/etc/cinder/cinder.conf<br><br>openstack-config --set /etc/cinder/cinder.conf database connection    mysql+pymysql://cinder:CINDER_DBPASS@controller/cinder<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT transport_url rabbit://openstack:RABBIT_PASS@controller<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT auth_strategy keystone<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken www_authenticate_uri http://controller:5000<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_url http://controller:5000<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken memcached_servers   controller:11211<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_type  password<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken project_domain_name   default<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken user_domain_name   default<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken project_name   service<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken username    cinder<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken password    CINDER_PASS<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT my_ip  172.16.100.28 ###替换自己IP<br>openstack-config --set /etc/cinder/cinder.conf oslo_concurrency lock_path  /var/lib/cinder/tmp<br></code></pre></td></tr></table></figure><h4 id="同步cinder数据库"><a href="#同步cinder数据库" class="headerlink" title="同步cinder数据库"></a>同步cinder数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">su -s /bin/sh -c &quot;cinder-manage db sync&quot; cinder<br></code></pre></td></tr></table></figure><!--同步后进入数据库查看cinder库是否有数据--><!--忽略警告--><p>修改nova配置文件</p><p><strong>&#x2F;etc&#x2F;nova&#x2F;nova.conf</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">openstack-config --set /etc/cinder/cinder.conf cinder os_region_name  RegionOne<br></code></pre></td></tr></table></figure><h4 id="启动服务-6"><a href="#启动服务-6" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart openstack-nova-api.service<br>systemctl enable openstack-cinder-api.service openstack-cinder-scheduler.service<br>systemctl start openstack-cinder-api.service openstack-cinder-scheduler.service<br></code></pre></td></tr></table></figure><h3 id="compute-5"><a href="#compute-5" class="headerlink" title="compute"></a>compute</h3><h4 id="在计算节点安装存储节点-compute"><a href="#在计算节点安装存储节点-compute" class="headerlink" title="在计算节点安装存储节点(compute)"></a>在计算节点安装存储节点(compute)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装支持的工具包</span><br>yum -y install lvm2 device-mapper-persistent-data<br>systemctl enable lvm2-lvmetad.service<br>systemctl start lvm2-lvmetad.service<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">在计算节点新建一块硬盘<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##如果在VM添加的硬盘没有扫描出来,用以下命令</span></span><br>echo &#x27;- - -&#x27; &gt;/sys/class/scsi_host/host0/scan<br>echo &#x27;- - -&#x27; &gt;/sys/class/scsi_host/host1/scan<br>echo &#x27;- - -&#x27; &gt;/sys/class/scsi_host/host2/scan<br><br>[root@compute ~]# lsblk<br>NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0              11:0    1 1024M  0 rom  <br>vda             252:0    0   80G  0 disk <br>├─vda1          252:1    0    1G  0 part /boot<br>└─vda2          252:2    0   79G  0 part <br>  ├─centos-root 253:0    0 49.9G  0 lvm  /<br>  ├─centos-swap 253:1    0  4.8G  0 lvm  [SWAP]<br>  └─centos-home 253:2    0 24.3G  0 lvm  /home<br>vdb             252:16   0   80G  0 disk  ###新添加的硬盘<br></code></pre></td></tr></table></figure><h4 id="创建LVM-物理卷"><a href="#创建LVM-物理卷" class="headerlink" title="创建LVM 物理卷"></a>创建LVM 物理卷</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]#  pvcreate /dev/vdb<br>  Physical volume &quot;/dev/vdb&quot; successfully created.<br></code></pre></td></tr></table></figure><h4 id="创建-LVM-卷组-cinder-volumes"><a href="#创建-LVM-卷组-cinder-volumes" class="headerlink" title="创建 LVM 卷组 cinder-volumes"></a>创建 LVM 卷组 cinder-volumes</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]# vgcreate cinder-volumes /dev/vdb<br>  Volume group &quot;cinder-volumes&quot; successfully created<br></code></pre></td></tr></table></figure><h4 id="添加一个过滤器-只有实例可以访问块存储卷组"><a href="#添加一个过滤器-只有实例可以访问块存储卷组" class="headerlink" title="添加一个过滤器(只有实例可以访问块存储卷组)"></a>添加一个过滤器(只有实例可以访问块存储卷组)</h4><p><strong>&#x2F;etc&#x2F;lvm&#x2F;lvm.conf</strong> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##大概文件130行左右</span></span><br>filter = [ &quot;a/vdb/&quot;, &quot;r/.*/&quot;]<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#####多盘######filter = [ &quot;a/vdb/&quot;, &quot;a/vdc/&quot;, &quot;r/.*/&quot;]</span></span><br></code></pre></td></tr></table></figure><h4 id="安装服务相应软件包-2"><a href="#安装服务相应软件包-2" class="headerlink" title="安装服务相应软件包"></a>安装服务相应软件包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-cinder targetcli python-keystone<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-9"><a href="#修改配置文件-9" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>&#x2F;etc&#x2F;cinder&#x2F;cinder.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/cinder/cinder.conf&#123;,.bak&#125;<br>grep -Ev &#x27;^$|#&#x27; /etc/cinder/cinder.conf.bak &gt;/etc/cinder/cinder.conf<br><br>openstack-config --set /etc/cinder/cinder.conf database connection mysql+pymysql://cinder:CINDER_DBPASS@controller/cinder<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT transport_url rabbit://openstack:RABBIT_PASS@controller<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT auth_strategy keystone<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken www_authenticate_uri http://controller:5000<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_url http://controller:5000<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_type password<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken project_domain_name default<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken user_domain_name default<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken project_name service<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken username cinder<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken password CINDER_PASS<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT my_ip 172.16.100.29 ###替换自己IP<br>openstack-config --set /etc/cinder/cinder.conf lvm volume_driver cinder.volume.drivers.lvm.LVMVolumeDriver<br>openstack-config --set /etc/cinder/cinder.conf lvm volume_group cinder-volumes<br>openstack-config --set /etc/cinder/cinder.conf lvm target_protocol  iscsi<br>openstack-config --set /etc/cinder/cinder.conf lvm target_helper lioadm<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT enabled_backends lvm<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT glance_api_servers http://controller:9292<br>openstack-config --set /etc/cinder/cinder.conf oslo_concurrency lock_path /var/lib/cinder/tmp<br></code></pre></td></tr></table></figure><h4 id="启动服务-7"><a href="#启动服务-7" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable openstack-cinder-volume.service target.service<br>systemctl start openstack-cinder-volume.service target.service<br></code></pre></td></tr></table></figure><h4 id="在controller检查是否成功"><a href="#在controller检查是否成功" class="headerlink" title="在controller检查是否成功"></a>在controller检查是否成功</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]#  cinder service-list<br>+------------------+-------------+------+---------+-------+----------------------------+---------+---------+<br>| Binary           | Host        | Zone | Status  | State | Updated_at                 | Cluster | Disabled Reason | Backend State |<br>+------------------+-------------+------+---------+-------+----------------------------+---------+---------+<br>| cinder-scheduler | controller  | nova | enabled | up    | 2021-12-17T12:06:39.000000 | -       | -               |               |<br>| cinder-volume    | compute@lvm | nova | enabled | up    | 2021-12-17T12:06:37.000000 | -       | -               | up            |<br>+------------------+-------------+------+---------+-------+----------------------------+---------+---------+<br><br></code></pre></td></tr></table></figure><h2 id="启动一个实例"><a href="#启动一个实例" class="headerlink" title="启动一个实例"></a>启动一个实例</h2><h3 id="1-创建网络"><a href="#1-创建网络" class="headerlink" title="1.创建网络"></a>1.创建网络</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">neutron net-create --shared --provider:physical_network provider  --provider:network_type flat zzz<br>neutron subnet-create --name  zzz123\<br>  --allocation-pool start=172.16.100.101,end=172.16.100.250 \<br>  --dns-nameserver 114.114.114.114 --gateway 172.16.100.254 \<br>   zzz 172.16.100.0/24<br><br>openstack network create --share --provider-physical-network provider --provider-network-type flat zzz<br>openstack subnet create --ip-version 4 --allocation-pool start=172.16.100.101,end=172.16.100.250 --dns-nameserver 114.114.114.114 --gateway 172.16.100.254 --subnet-range 172.16.100.0/24 --network zzz zzz123<br></code></pre></td></tr></table></figure><h3 id="2-创建云主机的硬件配置方案"><a href="#2-创建云主机的硬件配置方案" class="headerlink" title="2.创建云主机的硬件配置方案"></a>2.创建云主机的硬件配置方案</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack flavor create --id 0 --vcpus 1 --ram 1024 --disk 10 m1.nano<br></code></pre></td></tr></table></figure><h3 id="3-创建密钥对"><a href="#3-创建密钥对" class="headerlink" title="3.创建密钥对"></a>3.创建密钥对</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -q -N &quot;&quot; -f ~/.ssh/id_rsa<br>openstack keypair create --public-key ~/.ssh/id_rsa.pub mykey<br>验证是否添加:  openstack keypair list<br></code></pre></td></tr></table></figure><h3 id="4-创建安全组规则"><a href="#4-创建安全组规则" class="headerlink" title="4.创建安全组规则"></a>4.创建安全组规则</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">允许 ICMP (ping)：<br>openstack security group rule create --proto icmp default<br>允许安全 shell (SSH) 的访问：<br>openstack security group rule create --proto tcp --dst-port 22 default<br></code></pre></td></tr></table></figure><h3 id="5-启动一个实例"><a href="#5-启动一个实例" class="headerlink" title="5.启动一个实例"></a>5.启动一个实例</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">查看网络id:  neutron net-list<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##网络id=PROVIDER_NET_ID</span></span><br>创建实例:<br>openstack server create --flavor m1.nano --image cirros \<br>  --nic net-id=PROVIDER_NET_ID --security-group default \<br>  --key-name mykey provider-instance<br>  <br><span class="hljs-meta prompt_">  </span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##查看已创建实例###</span></span><br>[root@controller ~]# openstack server list<br>+--------------------------------------+-------------------+--------+--------------------+<br>| ID                                   | Name              | Status | Networks           |<br>+--------------------------------------+-------------------+--------+--------------------+<br>| f6fa8d1a-13e7-46c9-b5e3-78cfdc3497d5 | provider-instance | ACTIVE | zzz=172.16.100.102 |<br>+--------------------------------------+-------------------+--------+--------------------+<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>openstack-T</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>openstack-Mitaka</title>
    <link href="/2022/04/17/openstack-Mitaka/"/>
    <url>/2022/04/17/openstack-Mitaka/</url>
    
    <content type="html"><![CDATA[<h1 id="OpenStack-M版搭建"><a href="#OpenStack-M版搭建" class="headerlink" title="OpenStack M版搭建"></a>OpenStack M版搭建</h1><p><img src="https://i.bmp.ovh/imgs/2022/04/17/3f71c9177e94cb22.png" alt="img"></p><h2 id="密码表：-密码均为密码名称"><a href="#密码表：-密码均为密码名称" class="headerlink" title="密码表：(密码均为密码名称)"></a>密码表：(密码均为密码名称)</h2><table><thead><tr><th align="center">密码名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">数据库密码(不能使用变量)</td><td align="center">数据库的root密码</td></tr><tr><td align="center"><code>ADMIN_PASS</code></td><td align="center"><code>admin</code> 用户密码</td></tr><tr><td align="center"><code>CEILOMETER_DBPASS</code></td><td align="center">Telemetry 服务的数据库密码</td></tr><tr><td align="center"><code>CEILOMETER_PASS</code></td><td align="center">Telemetry 服务的 <code>ceilometer</code> 用户密码</td></tr><tr><td align="center"><code>CINDER_DBPASS</code></td><td align="center">块设备存储服务的数据库密码</td></tr><tr><td align="center"><code>CINDER_PASS</code></td><td align="center">块设备存储服务的 <code>cinder</code> 密码</td></tr><tr><td align="center"><code>DASH_DBPASS</code></td><td align="center">Database password for the dashboard</td></tr><tr><td align="center"><code>DEMO_PASS</code></td><td align="center"><code>demo</code> 用户的密码</td></tr><tr><td align="center"><code>GLANCE_DBPASS</code></td><td align="center">镜像服务的数据库密码</td></tr><tr><td align="center"><code>GLANCE_PASS</code></td><td align="center">镜像服务的 <code>glance</code> 用户密码</td></tr><tr><td align="center"><code>HEAT_DBPASS</code></td><td align="center">Orchestration服务的数据库密码</td></tr><tr><td align="center"><code>HEAT_DOMAIN_PASS</code></td><td align="center">Orchestration 域的密码</td></tr><tr><td align="center"><code>HEAT_PASS</code></td><td align="center">Orchestration 服务中<code>heat</code>用户的密码</td></tr><tr><td align="center"><code>KEYSTONE_DBPASS</code></td><td align="center">认证服务的数据库密码</td></tr><tr><td align="center"><code>NEUTRON_DBPASS</code></td><td align="center">网络服务的数据库密码</td></tr><tr><td align="center"><code>NEUTRON_PASS</code></td><td align="center">网络服务的 <code>neutron</code> 用户密码</td></tr><tr><td align="center"><code>NOVA_DBPASS</code></td><td align="center">计算服务的数据库密码</td></tr><tr><td align="center"><code>NOVA_PASS</code></td><td align="center">计算服务中<code>nova</code>用户的密码</td></tr><tr><td align="center"><code>RABBIT_PASS</code></td><td align="center">RabbitMQ的guest用户密码</td></tr><tr><td align="center"><code>SWIFT_PASS</code></td><td align="center">对象存储服务用户<code>swift</code>的密码</td></tr></tbody></table><h2 id="主机配置"><a href="#主机配置" class="headerlink" title="主机配置"></a>主机配置</h2><table><thead><tr><th align="center">主机名</th><th align="center">IP</th><th align="center">内存</th><th align="center">硬盘</th><th align="center">网卡数</th></tr></thead><tbody><tr><td align="center">controller</td><td align="center">172.16.100.28</td><td align="center">8G</td><td align="center">80G</td><td align="center">1</td></tr><tr><td align="center">compute</td><td align="center">172.16.100.29</td><td align="center">8G</td><td align="center">80G</td><td align="center">1</td></tr></tbody></table><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><h4 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h4><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">hostnamectl set-hostname controller<br></code></pre></td></tr></table></figure><h4 id="compute"><a href="#compute" class="headerlink" title="compute"></a>compute</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hostnamectl set-hostname compute<br></code></pre></td></tr></table></figure><!--注意重新连接 否则后面创建Rabbitmq用户可能会报错--><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><h3 id="controller配置"><a href="#controller配置" class="headerlink" title="controller配置"></a>controller配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/sysconfig/network-scripts/ifcfg-eth0<br><br>ONBOOT=yes<br>BOOTPROTO=static<br>IPADDR=172.16.100.28<br>NETMASK=255.255.255.0<br>GATEWAY=172.16.100.254<br>DNS1=114.114.114.114<br></code></pre></td></tr></table></figure><h3 id="compute配置"><a href="#compute配置" class="headerlink" title="compute配置"></a>compute配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/sysconfig/network-scripts/ifcfg-eth0<br><br>ONBOOT=yes<br>BOOTPROTO=static<br>IPADDR=172.16.100.29<br>NETMASK=255.255.255.0<br>GATEWAY=172.16.100.254<br>DNS1=114.114.114.114<br></code></pre></td></tr></table></figure><p>：wq 保存退出</p><h3 id="重启网卡"><a href="#重启网卡" class="headerlink" title="重启网卡"></a>重启网卡</h3><!--在controller和compute均执行--><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart network<br></code></pre></td></tr></table></figure><h4 id="controller-1"><a href="#controller-1" class="headerlink" title="controller"></a>controller</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# ip addr<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000<br>    link/ether 52:54:00:00:db:9c brd ff:ff:ff:ff:ff:ff<br>    inet 172.16.100.28/24 brd 172.16.100.255 scope global noprefixroute eth0<br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::6010:d73a:2158:5fe8/64 scope link noprefixroute <br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><h4 id="compute-1"><a href="#compute-1" class="headerlink" title="compute"></a>compute</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]# ip addr<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000<br>    link/ether 52:54:00:3c:b9:4c brd ff:ff:ff:ff:ff:ff<br>    inet 172.16.100.29/24 brd 172.16.100.255 scope global noprefixroute eth0<br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::c374:72b:eb12:5916/64 scope link noprefixroute <br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><!--在controller和compute均执行--><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl stop firewalld<br>systemctl disable firewalld<br></code></pre></td></tr></table></figure><h3 id="关闭网卡守护进程"><a href="#关闭网卡守护进程" class="headerlink" title="关闭网卡守护进程"></a>关闭网卡守护进程</h3><!--在controller和compute均执行--><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shel">systemctl stop NetworkManager<br>systemctl disable NetworkManager<br></code></pre></td></tr></table></figure><h3 id="关闭SElinux"><a href="#关闭SElinux" class="headerlink" title="关闭SElinux"></a>关闭SElinux</h3><!--在controller和compute均执行--><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">setenforce 0<br><br>vi /etc/selinux/config<br><br>修改 SELINUX=enforcing 为 SELINUX=disabled<br><br>:wq 保存退出<br></code></pre></td></tr></table></figure><h3 id="查看SElinux状态"><a href="#查看SElinux状态" class="headerlink" title="查看SElinux状态"></a>查看SElinux状态</h3><!--在controller和compute均执行--><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# getenforce <br>Permissive<br><br>[root@compute ~]# getenforce <br>Permissive<br><br></code></pre></td></tr></table></figure><h3 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell">将目录下的源删除<br>rm -rf /etc/yum.repos.d/C*<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">controller</span><br>[root@controller ~]# cat /etc/yum.repos.d/http.repo <br>[centos]<br>name=centos<br>baseurl=ftp://172.16.100.66/centos<br>gpgcheck=0<br>[openstack-m]<br>name=openstack-m<br>baseurl=ftp://172.16.100.66/openstack-m<br>gpgcheck=0<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">compute</span><br>[root@compute ~]# cat /etc/yum.repos.d/http.repo <br>[centos]<br>name=centos<br>baseurl=ftp://172.16.100.66/centos<br>gpgcheck=0<br>[openstack-m]<br>name=openstack-m<br>baseurl=ftp://172.16.100.66/openstack-m<br>gpgcheck=0<br></code></pre></td></tr></table></figure><blockquote><p>此处用的是配置本地源，一个Centos，一个OpenStack源</p><p>附上国内阿里源<a href="https://mirrors.aliyun.com/centos/7/cloud/x86_64/openstack-queens/">https://mirrors.aliyun.com/centos/7/cloud/x86_64/openstack-queens/</a></p></blockquote><h3 id="配置host解析"><a href="#配置host解析" class="headerlink" title="配置host解析"></a>配置host解析</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# cat /etc/hosts<br>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4<br>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6<br><br>172.16.100.28 controller<br>172.16.100.29 compute<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]# cat /etc/hosts<br>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4<br>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6<br><br>172.16.100.28 controller<br>172.16.100.29 compute<br></code></pre></td></tr></table></figure><h3 id="测试各节点之间与Internet的通信"><a href="#测试各节点之间与Internet的通信" class="headerlink" title="测试各节点之间与Internet的通信"></a>测试各节点之间与Internet的通信</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# ping -c 2 compute<br>PING compute (172.16.100.29) 56(84) bytes of data.<br>64 bytes from compute (172.16.100.29): icmp_seq=1 ttl=64 time=0.250 ms<br>64 bytes from compute (172.16.100.29): icmp_seq=2 ttl=64 time=0.447 ms<br><br>--- compute ping statistics ---<br>2 packets transmitted, 2 received, 0% packet loss, time 1000ms<br>rtt min/avg/max/mdev = 0.250/0.348/0.447/0.100 m<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]# ping -c 2 controller<br>PING controller (172.16.100.28) 56(84) bytes of data.<br>64 bytes from controller (172.16.100.28): icmp_seq=1 ttl=64 time=0.378 ms<br>64 bytes from controller (172.16.100.28): icmp_seq=2 ttl=64 time=0.391 ms<br><br>--- controller ping statistics ---<br>2 packets transmitted, 2 received, 0% packet loss, time 1000ms<br>rtt min/avg/max/mdev = 0.378/0.384/0.391/0.020 ms<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# ping -c 2 baidu.com<br>PING baidu.com (220.181.38.251) 56(84) bytes of data.<br>64 bytes from 220.181.38.251 (220.181.38.251): icmp_seq=1 ttl=47 time=174 ms<br>64 bytes from 220.181.38.251 (220.181.38.251): icmp_seq=2 ttl=47 time=173 ms<br><br>--- baidu.com ping statistics ---<br>2 packets transmitted, 2 received, 0% packet loss, time 1001ms<br>rtt min/avg/max/mdev = 173.205/173.637/174.070/0.600 ms<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]# ping -c 2 baidu.com<br>PING baidu.com (220.181.38.251) 56(84) bytes of data.<br>64 bytes from 220.181.38.251 (220.181.38.251): icmp_seq=1 ttl=47 time=174 ms<br>64 bytes from 220.181.38.251 (220.181.38.251): icmp_seq=2 ttl=47 time=171 ms<br><br>--- baidu.com ping statistics ---<br>2 packets transmitted, 2 received, 0% packet loss, time 1000ms<br>rtt min/avg/max/mdev = 171.844/173.164/174.484/1.320 ms<br></code></pre></td></tr></table></figure><h3 id="修改时间同步配置文件"><a href="#修改时间同步配置文件" class="headerlink" title="修改时间同步配置文件"></a>修改时间同步配置文件</h3><h4 id="controller-2"><a href="#controller-2" class="headerlink" title="controller"></a>controller</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/chrony.conf<br><br>server ntp.aliyun.com iburst<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##大概26行左右###</span></span><br>allow 172.16.100.0/24<br></code></pre></td></tr></table></figure><h4 id="compute-2"><a href="#compute-2" class="headerlink" title="compute"></a>compute</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/chrony.conf<br><br>server controller iburst<br></code></pre></td></tr></table></figure><h4 id="重启chrony服务"><a href="#重启chrony服务" class="headerlink" title="重启chrony服务"></a>重启chrony服务</h4><!--在controller和compute均执行--><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart chronyd<br></code></pre></td></tr></table></figure><h4 id="验证是否同步成功"><a href="#验证是否同步成功" class="headerlink" title="验证是否同步成功"></a>验证是否同步成功</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# chronyc sources<br>210 Number of sources = 1<br>MS Name/IP address         Stratum Poll Reach LastRx Last sample               <br>===============================================================================<br>^* 203.107.6.88                  2   6   367    79   +140us[ +789us] +/-   95ms<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]# chronyc sources<br>210 Number of sources = 1<br>MS Name/IP address         Stratum Poll Reach LastRx Last sample               <br>===============================================================================<br>^* controller                    3   6   377     9    -34us[ +664us] +/-   96ms<br><br></code></pre></td></tr></table></figure><h3 id="所有节点安装openstack客户端和openstack-selinux"><a href="#所有节点安装openstack客户端和openstack-selinux" class="headerlink" title="所有节点安装openstack客户端和openstack-selinux"></a>所有节点安装openstack客户端和openstack-selinux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install python-openstackclient openstack-selinux<br></code></pre></td></tr></table></figure><h3 id="安装Mariadb数据库-controller"><a href="#安装Mariadb数据库-controller" class="headerlink" title="安装Mariadb数据库(controller)"></a>安装Mariadb数据库(controller)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install mariadb mariadb-server python2-PyMySQL<br></code></pre></td></tr></table></figure><p>创建和编辑<code>/etc/my.cnf.d/openstack.cnf</code>文件并添加以下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shel">[mysqld]<br>bind-address = 172.16.100.28 #controller IP地址<br>default-storage-engine = innodb<br>innodb_file_per_table<br>max_connections = 4096<br>collation-server = utf8_general_ci<br>character-set-server = utf8<br></code></pre></td></tr></table></figure><h4 id="启动mariadb"><a href="#启动mariadb" class="headerlink" title="启动mariadb"></a>启动mariadb</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start mariadb<br>systemctl enable mariadb<br></code></pre></td></tr></table></figure><h4 id="数据库默认初始化-设置密码000000"><a href="#数据库默认初始化-设置密码000000" class="headerlink" title="数据库默认初始化 (设置密码000000)"></a>数据库默认初始化 (设置密码000000)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# mysql_secure_installation<br><br>NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB<br>      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!<br><br>In order to log into MariaDB to secure it, we&#x27;ll need the current<br>password for the root user.  If you&#x27;ve just installed MariaDB, and<br>you haven&#x27;t set the root password yet, the password will be blank,<br>so you should just press enter here.<br><br>Enter current password for root (enter for none): <br>OK, successfully used password, moving on...<br><br>Setting the root password ensures that nobody can log into the MariaDB<br>root user without the proper authorisation.<br><br>Set root password? [Y/n] y<br>New password: <br>Re-enter new password: <br>Password updated successfully!<br>Reloading privilege tables..<br> ... Success!<br><br><br>By default, a MariaDB installation has an anonymous user, allowing anyone<br>to log into MariaDB without having to have a user account created for<br>them.  This is intended only for testing, and to make the installation<br>go a bit smoother.  You should remove them before moving into a<br>production environment.<br><br>Remove anonymous users? [Y/n] y<br> ... Success!<br><br>Normally, root should only be allowed to connect from &#x27;localhost&#x27;.  This<br>ensures that someone cannot guess at the root password from the network.<br><br>Disallow root login remotely? [Y/n] y<br> ... Success!<br><br>By default, MariaDB comes with a database named &#x27;test&#x27; that anyone can<br>access.  This is also intended only for testing, and should be removed<br>before moving into a production environment.<br><br>Remove test database and access to it? [Y/n] y<br> - Dropping test database...<br> ... Success!<br> - Removing privileges on test database...<br> ... Success!<br><br>Reloading the privilege tables will ensure that all changes made so far<br>will take effect immediately.<br><br>Reload privilege tables now? [Y/n] y<br> ... Success!<br><br>Cleaning up...<br><br>All done!  If you&#x27;ve completed all of the above steps, your MariaDB<br>installation should now be secure.<br><br>Thanks for using MariaDB!<br></code></pre></td></tr></table></figure><h3 id="安装rabbitmq并创建用户-controller"><a href="#安装rabbitmq并创建用户-controller" class="headerlink" title="安装rabbitmq并创建用户(controller)"></a>安装rabbitmq并创建用户(controller)</h3><p>1、功能:协调操作和状态信息服务</p><p>2、常用的消息代理软件</p><p>​RabbitMQ</p><p>​Qpid</p><p>​ZeroMQ</p><p>3.在controller节点安装RabbitMQ</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.安装RabbitMQ软件包<br>yum -y install rabbitmq-server<br>b.启动服务并设置开机自启动<br>systemctl enable rabbitmq-server<br>systemctl start rabbitmq-server<br>查看运行状态<br>systemctl status rabbitmq-server<br>c.创建用户<br>rabbitmqctl add_user openstack RABBIT_PASS<br>rabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;<br></code></pre></td></tr></table></figure><h3 id="安装memcached缓存-controller"><a href="#安装memcached缓存-controller" class="headerlink" title="安装memcached缓存(controller)"></a>安装memcached缓存(controller)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.安装memcached软件包<br>yum -y install memcached python-memcached<br>b.修改配置文件的地址否则其他网络无法访问<br>sed -i &#x27;s#127.0.0.1#172.16.100.28#g&#x27; /etc/sysconfig/memcached  ##注意IP更换成自己的<br>c.启动服务并设置开机自启动<br>systemctl start memcached.service<br>systemctl enable memcached.service<br></code></pre></td></tr></table></figure><h2 id="Keystone认证服务"><a href="#Keystone认证服务" class="headerlink" title="Keystone认证服务"></a>Keystone认证服务</h2><p>keystone认证方式:UUID,PKI,Fernet   随机生成字符串的方法</p><p>功能:认证管理,授权管理,服务目录</p><h3 id="在控制节点创建认证服务数据库-controller"><a href="#在控制节点创建认证服务数据库-controller" class="headerlink" title="在控制节点创建认证服务数据库(controller)"></a>在控制节点创建认证服务数据库(controller)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.登录mysql数据库<br>mysql -u root -p000000<br>b.创建keystone数据库<br>CREATE DATABASE keystone;<br>c.创建keystone数据库用户，使其可以对keystone数据库有完全控制权限<br>GRANT ALL PRIVILEGES ON keystone.* TO &#x27;keystone&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;KEYSTONE_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON keystone.* TO &#x27;keystone&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;KEYSTONE_DBPASS&#x27;;<br>d.退出数据库<br>exit<br></code></pre></td></tr></table></figure><h3 id="安装keystone相关软件包-和openstack-utils-noarch软件包"><a href="#安装keystone相关软件包-和openstack-utils-noarch软件包" class="headerlink" title="安装keystone相关软件包 和openstack-utils.noarch软件包"></a>安装keystone相关软件包 和openstack-utils.noarch软件包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-keystone httpd mod_wsgi openstack-utils.noarch<br></code></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/keystone/keystone.conf /etc/keystone/keystone.conf.bak<br>grep -Ev &#x27;^$|#&#x27; /etc/keystone/keystone.conf.bak &gt; /etc/keystone/keystone.conf<br><br>openstack-config --set /etc/keystone/keystone.conf DEFAULT admin_token ADMIN_TOKEN<br>openstack-config --set /etc/keystone/keystone.conf  database connection mysql+pymysql://keystone:KEYSTONE_DBPASS@controller/keystone<br>openstack-config --set /etc/keystone/keystone.conf  token provider fernet<br></code></pre></td></tr></table></figure><h3 id="同步keystone数据库"><a href="#同步keystone数据库" class="headerlink" title="同步keystone数据库"></a>同步keystone数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">su -s /bin/sh -c &quot;keystone-manage db_sync&quot; keystone<br></code></pre></td></tr></table></figure><!--同步后进入数据库查看keystone库是否有数据--><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">如果同步失败,将/var/log/keystone/keystone.log修改属组,重启httpd<br><br>chown -R keystone.keystone /var/log/keystone/keystone.log<br>systemctl restart httpd<br></code></pre></td></tr></table></figure><h3 id="初始化fernet"><a href="#初始化fernet" class="headerlink" title="初始化fernet"></a>初始化fernet</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone<br></code></pre></td></tr></table></figure><h3 id="配置Apache-HTTP服务器"><a href="#配置Apache-HTTP服务器" class="headerlink" title="配置Apache HTTP服务器"></a>配置Apache HTTP服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/<br>echo &quot;ServerName controller&quot; &gt;&gt;/etc/httpd/conf/httpd.conf<br></code></pre></td></tr></table></figure><p>配置以下文件</p><p>###将原有是删除</p><p>vim &#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;wsgi-keystone.conf </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell">Listen 5000<br>Listen 35357<br><br>&lt;VirtualHost *:5000&gt;<br>    WSGIDaemonProcess keystone-public processes=5 threads=1 user=keystone group=keystone display-name=%&#123;GROUP&#125;<br>    WSGIProcessGroup keystone-public<br>    WSGIScriptAlias / /usr/bin/keystone-wsgi-public<br>    WSGIApplicationGroup %&#123;GLOBAL&#125;<br>    WSGIPassAuthorization On<br>    ErrorLogFormat &quot;%&#123;cu&#125;t %M&quot;<br>    ErrorLog /var/log/httpd/keystone-error.log<br>    CustomLog /var/log/httpd/keystone-access.log combined<br><br>    &lt;Directory /usr/bin&gt;<br>        Require all granted<br>    &lt;/Directory&gt;<br>&lt;/VirtualHost&gt;<br><br>&lt;VirtualHost *:35357&gt;<br>    WSGIDaemonProcess keystone-admin processes=5 threads=1 user=keystone group=keystone display-name=%&#123;GROUP&#125;<br>    WSGIProcessGroup keystone-admin<br>    WSGIScriptAlias / /usr/bin/keystone-wsgi-admin<br>    WSGIApplicationGroup %&#123;GLOBAL&#125;<br>    WSGIPassAuthorization On<br>    ErrorLogFormat &quot;%&#123;cu&#125;t %M&quot;<br>    ErrorLog /var/log/httpd/keystone-error.log<br>    CustomLog /var/log/httpd/keystone-access.log combined<br><br>    &lt;Directory /usr/bin&gt;<br>        Require all granted<br>    &lt;/Directory&gt;<br>&lt;/VirtualHost&gt;<br></code></pre></td></tr></table></figure><h4 id="启动HTTP服务"><a href="#启动HTTP服务" class="headerlink" title="启动HTTP服务"></a>启动HTTP服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable httpd.service<br>systemctl start httpd.service<br></code></pre></td></tr></table></figure><h3 id="创建服务和注册api"><a href="#创建服务和注册api" class="headerlink" title="创建服务和注册api:"></a>创建服务和注册api:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">export OS_TOKEN=ADMIN_TOKEN<br>export OS_URL=http://controller:35357/v3<br>export OS_IDENTITY_API_VERSION=3<br><br>openstack service create \<br>  --name keystone --description &quot;OpenStack Identity&quot; identity<br><br>openstack endpoint create --region RegionOne \<br>  identity public http://controller:5000/v3<br>  <br>openstack endpoint create --region RegionOne \<br>  identity internal http://controller:5000/v3　　<br><span class="hljs-meta prompt_"> #</span><span class="language-bash">前两个为5000端口，专门处理内部和外部的访问</span><br>  　　　　　　　　　　　　　　　　　　　　　　　　　　　　<br>openstack endpoint create --region RegionOne \<br>  identity admin http://controller:35357/v3<br><span class="hljs-meta prompt_"> #</span><span class="language-bash">35357端口，专门处理admin</span><br></code></pre></td></tr></table></figure><h3 id="创建域-项目-用户-角色"><a href="#创建域-项目-用户-角色" class="headerlink" title="创建域,项目,用户,角色"></a>创建域,项目,用户,角色</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack domain create --description &quot;Default Domain&quot; default<br><br>openstack project create --domain default \<br>   --description &quot;Admin Project&quot; admin <br><br>openstack user create --domain default \<br>   --password ADMIN_PASS admin　　　　<br><br>openstack role create admin  <br><br>openstack role add --project admin --user admin admin<br><br>openstack project create --domain default \<br>--description &quot;Service Project&quot; service<br></code></pre></td></tr></table></figure><h3 id="创建环境变量脚本"><a href="#创建环境变量脚本" class="headerlink" title="创建环境变量脚本"></a>创建环境变量脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# cat admin-openrc <br>export OS_PROJECT_DOMAIN_NAME=default<br>export OS_USER_DOMAIN_NAME=default<br>export OS_PROJECT_NAME=admin<br>export OS_USERNAME=admin<br>export OS_PASSWORD=ADMIN_PASS<br>export OS_AUTH_URL=http://controller:35357/v3<br>export OS_IDENTITY_API_VERSION=3<br>export OS_IMAGE_API_VERSION=2<br></code></pre></td></tr></table></figure><h3 id="取消前面设置的环境变量"><a href="#取消前面设置的环境变量" class="headerlink" title="取消前面设置的环境变量"></a>取消前面设置的环境变量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">unset OS_TOKEN<br></code></pre></td></tr></table></figure><h3 id="使环境变量生效"><a href="#使环境变量生效" class="headerlink" title="使环境变量生效"></a>使环境变量生效</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source admin-openrc<br></code></pre></td></tr></table></figure><h3 id="验证环境变量是否成功"><a href="#验证环境变量是否成功" class="headerlink" title="验证环境变量是否成功"></a>验证环境变量是否成功</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack token issue<br></code></pre></td></tr></table></figure><p>### 注意环境变量问题:先取消前面设置的环境变量,否则会报错###</p><h2 id="Glance镜像服务"><a href="#Glance镜像服务" class="headerlink" title="Glance镜像服务"></a>Glance镜像服务</h2><p><strong>glance-api</strong></p><p>接收镜像API的调用，诸如镜像发现、恢复、存储。</p><p><strong>glance-registry</strong></p><p>存储、处理和恢复镜像的元数据，元数据包括项诸如大小和类型。</p><h3 id="在控制节点创建镜像服务数据库-controller"><a href="#在控制节点创建镜像服务数据库-controller" class="headerlink" title="在控制节点创建镜像服务数据库(controller)"></a>在控制节点创建镜像服务数据库(controller)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.登录mysql数据库<br>mysql -u root -p000000<br>b.创建glance数据库<br>CREATE DATABASE glance;<br>c.创建glance数据库用户，使其可以对glance数据库有完全控制权限<br>GRANT ALL PRIVILEGES ON glance.* TO &#x27;glance&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;GLANCE_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON glance.* TO &#x27;glance&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;GLANCE_DBPASS&#x27;;<br>d.退出数据库<br>exit<br></code></pre></td></tr></table></figure><h3 id="在keystone创建glance用户关联角色"><a href="#在keystone创建glance用户关联角色" class="headerlink" title="在keystone创建glance用户关联角色"></a>在keystone创建glance用户关联角色</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack user create --domain default --password GLANCE_PASS glance<br>openstack role add --project service --user glance admin<br><br>验证是否成功<br>openstack role assignment list<br></code></pre></td></tr></table></figure><h3 id="在keystone创建服务和注册api"><a href="#在keystone创建服务和注册api" class="headerlink" title="在keystone创建服务和注册api"></a>在keystone创建服务和注册api</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack service create --name glance \<br>--description &quot;OpenStack Image&quot; image<br>openstack endpoint create --region RegionOne \<br>  image public http://controller:9292<br>openstack endpoint create --region RegionOne \<br>  image internal http://controller:9292<br>openstack endpoint create --region RegionOne \<br>  image admin http://controller:9292<br></code></pre></td></tr></table></figure><h3 id="安装glance软件包"><a href="#安装glance软件包" class="headerlink" title="安装glance软件包"></a>安装glance软件包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-glance<br></code></pre></td></tr></table></figure><h3 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p><strong>&#x2F;etc&#x2F;glance&#x2F;glance-api.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/glance/glance-api.conf&#123;,.bak&#125;<br>grep &#x27;^[a-z\[]&#x27; /etc/glance/glance-api.conf.bak &gt;/etc/glance/glance-api.conf<br><br>openstack-config --set /etc/glance/glance-api.conf database connection mysql+pymysql://glance:GLANCE_DBPASS@controller/glance<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_uri http://controller:5000<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_url http://controller:35357<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken auth_type password<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken project_domain_name default<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken user_domain_name default<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken project_name service<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken username glance<br>openstack-config --set /etc/glance/glance-api.conf keystone_authtoken password GLANCE_PASS<br>openstack-config --set /etc/glance/glance-api.conf  paste_deploy flavor keystone<br>openstack-config --set /etc/glance/glance-api.conf glance_store stores file,http<br>openstack-config --set /etc/glance/glance-api.conf glance_store default_store file<br>openstack-config --set /etc/glance/glance-api.conf glance_store filesystem_store_datadir /var/lib/glance/images/<br></code></pre></td></tr></table></figure><p><strong>&#x2F;etc&#x2F;glance&#x2F;glance-registry.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp  /etc/glance/glance-registry.conf&#123;,.bak&#125;<br>grep &#x27;^[a-z\[]&#x27; /etc/glance/glance-registry.conf.bak &gt;/etc/glance/glance-registry.conf<br><br>openstack-config --set /etc/glance/glance-registry.conf database connection mysql+pymysql://glance:GLANCE_DBPASS@controller/glance<br>openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_uri http://controller:5000<br>openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_url http://controller:35357<br>openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken auth_type password<br>openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken project_domain_name default<br>openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken user_domain_name default<br>openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken project_name service<br>openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken username glance<br>openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken password GLANCE_PASS<br>openstack-config --set /etc/glance/glance-registry.conf paste_deploy flavor keystone<br></code></pre></td></tr></table></figure><h3 id="同步glance数据库"><a href="#同步glance数据库" class="headerlink" title="同步glance数据库"></a>同步glance数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">su -s /bin/sh -c &quot;glance-manage db_sync&quot; glance<br></code></pre></td></tr></table></figure><!--同步后进入数据库查看glance库是否有数据--><!--忽略警告--><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable openstack-glance-api.service openstack-glance-registry.service<br>systemctl start openstack-glance-api.service openstack-glance-registry.service<br></code></pre></td></tr></table></figure><h3 id="下载测试镜像cirros"><a href="#下载测试镜像cirros" class="headerlink" title="下载测试镜像cirros"></a>下载测试镜像cirros</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img<br></code></pre></td></tr></table></figure><p>###下载不了多试几次###</p><h3 id="上传镜像测试"><a href="#上传镜像测试" class="headerlink" title="上传镜像测试"></a>上传镜像测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack image create &quot;cirros&quot;  --file cirros-0.3.4-x86_64-disk.img  --disk-format qcow2 --container-format bare  --public<br></code></pre></td></tr></table></figure><h2 id="Nova计算服务"><a href="#Nova计算服务" class="headerlink" title="Nova计算服务"></a>Nova计算服务</h2><p>nova-api:接受响应所有的计算服务请求，管理虚拟机(云主机)生命周期</p><p>nova-compute (多个):真正管理虚拟机(nova-compute调用libvirt)</p><p>nova-scheduler:nova调度器（挑选出最合适的nova-compute来创建虚机)</p><p>nova-conductor:帮助nova-compute代理修改数据库中虚拟机的状态</p><p>nova-network早期openstack版本管理虚拟机的网络(已弃用,neutron)</p><p>nova-consoleauth和nova-novncproxy: web版的vnc来直接操作云主机</p><p>novncproxy:web版vnc客户端</p><p>nova-api-metadata:接受来自虚拟机发送的元数据请求(配合neutron-metadata-agent,来虚拟机定制化)</p><h3 id="controller-3"><a href="#controller-3" class="headerlink" title="controller"></a>controller</h3><h4 id="在控制节点创建nova服务数据库-controller"><a href="#在控制节点创建nova服务数据库-controller" class="headerlink" title="在控制节点创建nova服务数据库(controller)"></a>在控制节点创建nova服务数据库(controller)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.登录mysql数据库<br>mysql -u root -p000000<br>b.创建nova_api,nova数据库<br>CREATE DATABASE nova_api;<br>CREATE DATABASE nova;<br>c.创建nova_api，nova数据库用户，使其可以对nova_api,nova数据库有完全控制权限<br>GRANT ALL PRIVILEGES ON nova_api.* TO &#x27;nova&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON nova_api.* TO &#x27;nova&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON nova.* TO &#x27;nova&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON nova.* TO &#x27;nova&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;NOVA_DBPASS&#x27;;<br>d.退出数据库<br>exit<br></code></pre></td></tr></table></figure><h4 id="在keystone创建系统用户（glance，nova，neutron）关联角色"><a href="#在keystone创建系统用户（glance，nova，neutron）关联角色" class="headerlink" title="在keystone创建系统用户（glance，nova，neutron）关联角色"></a>在keystone创建系统用户（glance，nova，neutron）关联角色</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack user create --domain default --password NOVA_PASS nova<br>openstack role add --project service --user nova admin<br></code></pre></td></tr></table></figure><h4 id="在keystone上创建服务和注册api"><a href="#在keystone上创建服务和注册api" class="headerlink" title="在keystone上创建服务和注册api"></a>在keystone上创建服务和注册api</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack service create --name nova \<br>  --description &quot;OpenStack Compute&quot; compute<br>openstack endpoint create --region RegionOne \<br>  compute public http://controller:8774/v2.1/%\(tenant_id\)s<br>openstack endpoint create --region RegionOne \<br>  compute internal http://controller:8774/v2.1/%\(tenant_id\)s<br>openstack endpoint create --region RegionOne \<br>  compute admin http://controller:8774/v2.1/%\(tenant_id\)s<br></code></pre></td></tr></table></figure><h4 id="安装相关服务软件包"><a href="#安装相关服务软件包" class="headerlink" title="安装相关服务软件包"></a>安装相关服务软件包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-nova-api openstack-nova-conductor \<br>  openstack-nova-console openstack-nova-novncproxy \<br>  openstack-nova-scheduler<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-2"><a href="#修改配置文件-2" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>&#x2F;etc&#x2F;nova&#x2F;nova.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/nova/nova.conf&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27; /etc/nova/nova.conf.bak &gt;/etc/nova/nova.conf<br><br>openstack-config --set /etc/nova/nova.conf DEFAULT enabled_apis osapi_compute , metadata<br>openstack-config --set /etc/nova/nova.conf api_database connection mysql+pymysql://nova:NOVA_DBPASS@controller/nova_api<br>openstack-config --set /etc/nova/nova.conf database connection mysql+pymysql://nova:NOVA_DBPASS@controller/nova<br>openstack-config --set /etc/nova/nova.conf DEFAULT rpc_backend rabbit<br>openstack-config --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_host controller<br>openstack-config --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_userid openstack<br>openstack-config --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_password RABBIT_PASS<br>openstack-config --set /etc/nova/nova.conf DEFAULT auth_strategy keystone<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_uri http://controller:5000<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_url http://controller:35357<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_type password<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken project_domain_name default<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken user_domain_name default<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken project_name service<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken username nova<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken password NOVA_PASS<br>openstack-config --set /etc/nova/nova.conf DEFAULT my_ip 172.16.100.28###替换自己的IP!!!<br>openstack-config --set /etc/nova/nova.conf DEFAULT use_neutron True<br>openstack-config --set /etc/nova/nova.conf DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver<br>openstack-config --set /etc/nova/nova.conf vnc vncserver_listen &#x27;$my_ip&#x27;<br>openstack-config --set /etc/nova/nova.conf vnc vncserver_proxyclient_address &#x27;$my_ip&#x27;<br>openstack-config --set /etc/nova/nova.conf glance api_servers http://controller:9292<br>openstack-config --set /etc/nova/nova.conf oslo_concurrency lock_path /var/lib/nova/tmp<br></code></pre></td></tr></table></figure><h4 id="同步数据库"><a href="#同步数据库" class="headerlink" title="同步数据库"></a>同步数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">su -s /bin/sh -c &quot;nova-manage api_db sync&quot; nova<br>su -s /bin/sh -c &quot;nova-manage db sync&quot; nova<br></code></pre></td></tr></table></figure><!--同步后进入数据库查看nova库是否有数据--><!--忽略警告--><h4 id="启动服务-1"><a href="#启动服务-1" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable openstack-nova-api.service \<br>  openstack-nova-consoleauth.service openstack-nova-scheduler.service \<br>  openstack-nova-conductor.service openstack-nova-novncproxy.service<br>systemctl start openstack-nova-api.service \<br>  openstack-nova-consoleauth.service openstack-nova-scheduler.service \<br>  openstack-nova-conductor.service openstack-nova-novncproxy.service<br></code></pre></td></tr></table></figure><h3 id="compute-3"><a href="#compute-3" class="headerlink" title="compute"></a>compute</h3><h4 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-nova-compute openstack-utils.noarch<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-3"><a href="#修改配置文件-3" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>&#x2F;etc&#x2F;nova&#x2F;nova.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/nova/nova.conf&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27; /etc/nova/nova.conf.bak &gt;/etc/nova/nova.conf<br><br>openstack-config --set /etc/nova/nova.conf DEFAULT rpc_backend rabbit<br>openstack-config --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_host controller<br>openstack-config --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_userid openstack<br>openstack-config --set /etc/nova/nova.conf oslo_messaging_rabbit rabbit_password RABBIT_PASS<br>openstack-config --set /etc/nova/nova.conf DEFAULT auth_strategy keystone<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_uri http://controller:5000<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_url http://controller:35357<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_type password<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken project_domain_name default<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken user_domain_name default<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken project_name service<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken username nova<br>openstack-config --set /etc/nova/nova.conf keystone_authtoken password NOVA_PASS<br>openstack-config --set /etc/nova/nova.conf DEFAULT my_ip 172.16.100.29   ###替换自己IP<br>openstack-config --set /etc/nova/nova.conf DEFAULT use_neutron True<br>openstack-config --set /etc/nova/nova.conf DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver<br>openstack-config --set /etc/nova/nova.conf vnc enabled True<br>openstack-config --set /etc/nova/nova.conf vnc vncserver_listen 0.0.0.0<br>openstack-config --set /etc/nova/nova.conf vnc vncserver_proxyclient_address &#x27;$my_ip&#x27;<br>openstack-config --set /etc/nova/nova.conf vnc novncproxy_base_url http://172.16.100.28:6080/vnc_auto.html<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##服务器组件监听所有的 IP 地址，而代理组件仅仅监听计算节点管理网络接口的 IP 地址。基本的 URL 指示您可以使用 web 浏览器访问位于该计算节点上实例的远程控制台的位置。</span></span><br>openstack-config --set /etc/nova/nova.conf glance api_servers http://controller:9292<br>openstack-config --set /etc/nova/nova.conf oslo_concurrency lock_path /var/lib/nova/tmp<br>openstack-config --set /etc/nova/nova.conf libvirt cpu_mode none<br>openstack-config --set /etc/nova/nova.conf libvirt virt_type qemu<br></code></pre></td></tr></table></figure><h4 id="启动服务-2"><a href="#启动服务-2" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable libvirtd.service openstack-nova-compute.service<br>systemctl start libvirtd.service openstack-nova-compute.service<br></code></pre></td></tr></table></figure><h3 id="查看nova是否正常"><a href="#查看nova是否正常" class="headerlink" title="查看nova是否正常"></a>查看nova是否正常</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# nova service-list<br>+----+------------------+------------+----------+---------+-------+----------------------------+-----------+<br>| Id | Binary           | Host       | Zone     | Status  | State | Updated_at                 | Disabled Reason |<br>+----+------------------+------------+----------+---------+-------+----------------------------+-----------+<br>| 1  | nova-consoleauth | controller | internal | enabled | up    | 2021-11-23T12:50:21.000000 | -               |<br>| 2  | nova-conductor   | controller | internal | enabled | up    | 2021-11-23T12:50:22.000000 | -               |<br>| 3  | nova-scheduler   | controller | internal | enabled | up    | 2021-11-23T12:50:21.000000 | -               |<br>| 9  | nova-compute     | compute    | nova     | enabled | up    | 2021-11-23T12:50:25.000000 | -               |<br>+----+------------------+------------+----------+---------+-------+----------------------------+-----------+<br><br></code></pre></td></tr></table></figure><h2 id="Neutron网络服务"><a href="#Neutron网络服务" class="headerlink" title="Neutron网络服务"></a>Neutron网络服务</h2><p>neutron-serverT端(9696)api:接受和响应外部的网络管理请求</p><p>neutron-linuxbridge-agent :负责创建桥接网卡</p><p>neutron-dhcp-agent:负责分配IP</p><p>neutron-metadata-agent:配合nova-metadata-api实现虚拟机的定制化操作</p><p>L3-agent：实现三层网络vxlan(网络层)</p><h3 id="controller-4"><a href="#controller-4" class="headerlink" title="controller"></a>controller</h3><h4 id="在控制节点创建neutron服务数据库-controller"><a href="#在控制节点创建neutron服务数据库-controller" class="headerlink" title="在控制节点创建neutron服务数据库(controller)"></a>在控制节点创建neutron服务数据库(controller)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.登录mysql数据库<br>mysql -u root -p000000<br>b.创建neutron数据库<br>CREATE DATABASE neutron;<br>c.创建neutron数据库用户，使其可以对neutron数据库有完全控制权限<br>GRANT ALL PRIVILEGES ON neutron.* TO &#x27;neutron&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;NEUTRON_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON neutron.* TO &#x27;neutron&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;NEUTRON_DBPASS&#x27;;<br>d.退出数据库<br>exit<br></code></pre></td></tr></table></figure><h4 id="在keystone创建系统用户-glance-nova-neutron-关联角色"><a href="#在keystone创建系统用户-glance-nova-neutron-关联角色" class="headerlink" title="在keystone创建系统用户(glance, nova, neutron)关联角色"></a>在keystone创建系统用户(glance, nova, neutron)关联角色</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack user create --domain default --password NEUTRON_PASS neutron<br>openstack role add --project service --user neutron admin<br></code></pre></td></tr></table></figure><h4 id="在keystone上创建服务和注册api-1"><a href="#在keystone上创建服务和注册api-1" class="headerlink" title="在keystone上创建服务和注册api"></a>在keystone上创建服务和注册api</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"> openstack service create --name neutron \<br>  --description &quot;OpenStack Networking&quot; network<br>openstack endpoint create --region RegionOne \<br>  network public http://controller:9696<br>openstack endpoint create --region RegionOne \<br>  network internal http://controller:9696<br>openstack endpoint create --region RegionOne \<br>  network admin http://controller:9696<br></code></pre></td></tr></table></figure><h4 id="安装服务相应软件包"><a href="#安装服务相应软件包" class="headerlink" title="安装服务相应软件包"></a>安装服务相应软件包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum  -y install openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-4"><a href="#修改配置文件-4" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>配置服务组件</strong></p><p><strong>a：&#x2F;etc&#x2F;neutron&#x2F;neutron.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/neutron.conf&#123;,.bak&#125;<br>grep &#x27;^[a-z\[]&#x27; /etc/neutron/neutron.conf.bak &gt;/etc/neutron/neutron.conf<br><br>openstack-config --set /etc/neutron/neutron.conf database connection mysql+pymysql://neutron:NEUTRON_DBPASS@controller/neutron<br>openstack-config --set /etc/neutron/neutron.conf DEFAULT core_plugin ml2<br>openstack-config --set /etc/neutron/neutron.conf DEFAULT service_plugins  <br>openstack-config --set /etc/neutron/neutron.conf DEFAULT  rpc_backend rabbit<br>openstack-config --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_host controller<br>openstack-config --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_userid openstack<br>openstack-config --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_password RABBIT_PASS<br>openstack-config --set /etc/neutron/neutron.conf DEFAULT auth_strategy keystone<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_uri http://controller:5000<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_url http://controller:35357<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_type password<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_domain_name default<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken user_domain_name default<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_name service<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken username neutron<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken password NEUTRON_PASS<br>openstack-config --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_status_changes True<br>openstack-config --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_data_changes True<br>openstack-config --set /etc/neutron/neutron.conf  nova auth_url http://controller:35357<br>openstack-config --set /etc/neutron/neutron.conf  nova auth_type password<br>openstack-config --set /etc/neutron/neutron.conf  nova project_domain_name default<br>openstack-config --set /etc/neutron/neutron.conf  nova user_domain_name default<br>openstack-config --set /etc/neutron/neutron.conf  nova region_name RegionOne<br>openstack-config --set /etc/neutron/neutron.conf  nova project_name service<br>openstack-config --set /etc/neutron/neutron.conf  nova username nova<br>openstack-config --set /etc/neutron/neutron.conf  nova password NOVA_PASS<br>openstack-config --set /etc/neutron/neutron.conf  oslo_concurrency lock_path /var/lib/neutron/tmp<br></code></pre></td></tr></table></figure><p><strong>配置 Modular Layer 2 (ML2) 插件</strong></p><p><strong>b: &#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;ml2_conf.ini</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/plugins/ml2/ml2_conf.ini&#123;,.bak&#125;<br>grep &#x27;^[a-z\[]&#x27; /etc/neutron/plugins/ml2/ml2_conf.ini.bak &gt;/etc/neutron/plugins/ml2/ml2_conf.ini<br><br>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 type_drivers flat,vlan<br>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types <br>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers linuxbridge<br>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 extension_drivers port_security<br>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_flat flat_networks provider<br>openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup enable_ipset True<br></code></pre></td></tr></table></figure><p><strong>配置Linuxbridge代理</strong></p><p><strong>c: &#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;linuxbridge_agent.ini</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27; /etc/neutron/plugins/ml2/linuxbridge_agent.ini.bak &gt;/etc/neutron/plugins/ml2/linuxbridqe_agent.ini<br><br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini linux_bridge physical_interface_mappings provider:eth0 ###替换自己的网卡名称<br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan enable_vxlan False<br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup enable_security_group True<br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.IptablesFirewallDriver<br></code></pre></td></tr></table></figure><p><strong>配置DHCP代理</strong></p><p><strong>d: &#x2F;etc&#x2F;neutron&#x2F;dhcp_agent.ini</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/dhcp_agent.ini&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27;  /etc/neutron/dhcp_agent.ini.bak &gt;/etc/neutron/dhcp_agent.ini<br><br>openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT interface_driver   neutron.agent.linux.interface.BridgeInterfaceDriver<br>openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT dhcp_driver   neutron.agent.linux.dhcp.Dnsmasq<br>openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT enable_isolated_metadata   True<br></code></pre></td></tr></table></figure><p><strong>配置元数据代理</strong></p><p><strong>e：&#x2F;etc&#x2F;neutron&#x2F;metadata_agent.ini</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/metadata_agent.ini&#123;,.bak&#125;<br>grep -EV &#x27;^$|#&#x27; /etc/neutron/metadata_agent.ini.bak &gt; /etc/neutron/metadata_agent.ini<br><br>openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT nova_metadata_ip controller<br>openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT metadata_proxy_shared_secret METADATA_SECRET<br></code></pre></td></tr></table></figure><p><strong>添加控制节点网络服务</strong></p><p><strong>f：&#x2F;etc&#x2F;nova&#x2F;nova.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack-config --set  /etc/nova/nova.conf neutron url    http://controller:9696<br>openstack-config --set  /etc/nova/nova.conf neutron auth_url   http://controller:35357<br>openstack-config --set  /etc/nova/nova.conf neutron auth_type  password<br>openstack-config --set  /etc/nova/nova.conf neutron project_domain_name    default<br>openstack-config --set  /etc/nova/nova.conf neutron user_domain_name    default<br>openstack-config --set  /etc/nova/nova.conf neutron region_name    RegionOne<br>openstack-config --set  /etc/nova/nova.conf neutron project_name    service<br>openstack-config --set  /etc/nova/nova.conf neutron username    neutron<br>openstack-config --set  /etc/nova/nova.conf neutron password    NEUTRON_PASS<br>openstack-config --set  /etc/nova/nova.conf neutron service_metadata_proxy    True<br>openstack-config --set  /etc/nova/nova.conf neutron metadata_proxy_shared_secret    METADATA_SECRET<br></code></pre></td></tr></table></figure><h4 id="同步neutron数据库"><a href="#同步neutron数据库" class="headerlink" title="同步neutron数据库"></a><strong>同步neutron数据库</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini<br>su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf \<br>  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron<br></code></pre></td></tr></table></figure><!--可以ok即成功--><!--同步后进入数据库查看neutron库是否有数据--><!--忽略警告--><h4 id="启动服务-3"><a href="#启动服务-3" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart openstack-nova-api.service<br>systemctl enable neutron-server.service \<br>  neutron-linuxbridge-agent.service neutron-dhcp-agent.service \<br>  neutron-metadata-agent.service<br>systemctl start neutron-server.service \<br>  neutron-linuxbridge-agent.service neutron-dhcp-agent.service \<br>  neutron-metadata-agent.service<br></code></pre></td></tr></table></figure><h3 id="compute-4"><a href="#compute-4" class="headerlink" title="compute"></a>compute</h3><h4 id="在计算节点安装组件-compute"><a href="#在计算节点安装组件-compute" class="headerlink" title="在计算节点安装组件(compute)"></a>在计算节点安装组件(compute)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-neutron-linuxbridge ebtables ipset<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-5"><a href="#修改配置文件-5" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>a.&#x2F;etc&#x2F;neutron&#x2F;neutron.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/neutron.conf&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27; /etc/neutron/neutron.conf.bak &gt;/etc/neutron/neutron.conf<br><br>openstack-config --set /etc/neutron/neutron.conf DEFAULT rpc_backend    rabbit<br>openstack-config --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_host    controller<br>openstack-config --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_userid    openstack<br>openstack-config --set /etc/neutron/neutron.conf oslo_messaging_rabbit rabbit_password RABBIT_PASS<br>openstack-config --set /etc/neutron/neutron.conf DEFAULT auth_strategy    keystone<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_uri http://controller:5000<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_url http://controller:35357<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_type    password<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_domain_name  default<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken user_domain_name    default<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken project_name    service<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken username    neutron<br>openstack-config --set /etc/neutron/neutron.conf keystone_authtoken password    NEUTRON_PASS<br>openstack-config --set /etc/neutron/neutron.conf oslo_concurreny lock_path    /var/lib/neutron/tmp<br></code></pre></td></tr></table></figure><p><strong>配置Linuxbridge代理</strong></p><p><strong>b: &#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;linuxbridge_agent.ini</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini&#123;,.bak&#125;<br>grep &#x27;^[a-Z\[]&#x27; /etc/neutron/plugins/ml2/linuxbridge_agent.ini.bak &gt;/etc/neutron/plugins/ml2/linuxbridqe_agent.ini<br><br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini linux_bridge physical_interface_mappings provider:eth0  ###替换自己的网卡名称<br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan enable_vxlan False<br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup enable_security_group True<br>openstack-config --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.IptablesFirewallDriver<br></code></pre></td></tr></table></figure><p><strong>添加计算节点网络服务</strong></p><p><strong>c：&#x2F;etc&#x2F;nova&#x2F;nova.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack-config --set  /etc/nova/nova.conf neutron url    http://controller:9696<br>openstack-config --set  /etc/nova/nova.conf neutron auth_url    http://controller:35357<br>openstack-config --set  /etc/nova/nova.conf neutron auth_type    password<br>openstack-config --set  /etc/nova/nova.conf neutron project_domain_name    default<br>openstack-config --set  /etc/nova/nova.conf neutron user_domain_name    default<br>openstack-config --set  /etc/nova/nova.conf neutron region_name    RegionOne<br>openstack-config --set  /etc/nova/nova.conf neutron project_name    service<br>openstack-config --set  /etc/nova/nova.conf neutron username    neutron<br>openstack-config --set  /etc/nova/nova.conf neutron password    NEUTRON_PASS<br></code></pre></td></tr></table></figure><h4 id="启动服务-4"><a href="#启动服务-4" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">重新启动计算服务：<br>systemctl restart openstack-nova-compute.service<br>启动Linuxbridge代理并配置它开机自启动：<br>systemctl enable neutron-linuxbridge-agent.service<br>systemctl start neutron-linuxbridge-agent.service<br></code></pre></td></tr></table></figure><h2 id="Dashboard服务"><a href="#Dashboard服务" class="headerlink" title="Dashboard服务"></a>Dashboard服务</h2><p>(根据情况确定安装控制节点还是计算节点）</p><blockquote><p>此次安装在compute上</p></blockquote><h3 id="安装openstack-dashboard"><a href="#安装openstack-dashboard" class="headerlink" title="安装openstack-dashboard"></a>安装openstack-dashboard</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-dashboard<br></code></pre></td></tr></table></figure><h3 id="修改配置文件-6"><a href="#修改配置文件-6" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p><strong>&#x2F;etc&#x2F;openstack-dashboard&#x2F;local_settings</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在 controller 节点上配置仪表盘以使用 OpenStack 服务</span><br>OPENSTACK_HOST = &quot;controller&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">允许所有主机访问仪表板</span><br>ALLOWED_HOSTS = [&#x27;*&#x27;, ]<br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置 memcached 会话存储服务</span><br>CACHES = &#123;<br>  &#x27;default&#x27;: &#123;<br>        &#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.memcached.MemcachedCache&#x27;,<br>         &#x27;LOCATION&#x27;: &#x27;controller:11211&#x27;,<br>   &#125;<br>&#125;<br>SESSION_ENGINE = &#x27;django.contrib.sessions.backends.cache&#x27;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">启用第3版认证API</span><br>OPENSTACK_KEYSTONE_URL = &quot;http://%s:5000/v3&quot; % OPENSTACK_HOST<br><span class="hljs-meta prompt_">#</span><span class="language-bash">启用对域的支持</span><br>OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True<br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置API版本</span><br>OPENSTACK_API_VERSIONS = &#123;<br>   &quot;identity&quot;: 3,<br>    &quot;image&quot;: 2,<br>      &quot;volume&quot;: 2,<br>&#125;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">通过仪表盘创建用户时的默认域配置为 default</span><br>OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = &quot;default&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">通过仪表盘创建的用户默认角色配置为 user</span><br>OPENSTACK_KEYSTONE_DEFAULT_ROLE = &quot;user&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果您选择网络参数1，禁3层网络服务：</span><br>OPENSTACK_NEUTRON_NETWORK = &#123;<br>    ...<br>&#x27;enable_router&#x27;: False,<br>&#x27;enable_quotas&#x27;: False,<br>&#x27;enable_distributed_router&#x27;: False,<br>&#x27;enable_ha_router&#x27;: False,<br>&#x27;enable_lb&#x27;: False,<br>&#x27;enable_firewall&#x27;: False,<br>&#x27;enable_vpn&#x27;: False,<br>&#x27;enable_fip_topology_check&#x27;: False,<br>&#125;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">可以选择性地配置时区：</span><br>TIME_ZONE = &quot;Asia/Shanghai&quot;<br></code></pre></td></tr></table></figure><h3 id="启动服务-5"><a href="#启动服务-5" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart httpd.service<br></code></pre></td></tr></table></figure><h3 id="控制节点"><a href="#控制节点" class="headerlink" title="控制节点"></a>控制节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart memcached.service<br></code></pre></td></tr></table></figure><p>###如服务无法启动,在&#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;openstack-dashboard.conf文件下添加以下字段###</p><p>​WSGIApplicationGroup %{GLOBAL}</p><h2 id="Cinder块存储服务"><a href="#Cinder块存储服务" class="headerlink" title="Cinder块存储服务"></a>Cinder块存储服务</h2><p>cinder-volume LVM,nfs,gfs,ceph</p><p>cinder-api:接收外部的api请求</p><p>cinder-volume:提供存储空间</p><p>cinder-scheduler调度器,决定将要分配的空间由哪一个cinder-volume提供</p><p>cinder-backup备份存储</p><h3 id="controller-5"><a href="#controller-5" class="headerlink" title="controller"></a>controller</h3><h4 id="在控制节点创建Cinder服务数据库-controller"><a href="#在控制节点创建Cinder服务数据库-controller" class="headerlink" title="在控制节点创建Cinder服务数据库(controller)"></a>在控制节点创建Cinder服务数据库(controller)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">a.登录mysql数据库<br>mysql -u root -p000000<br>b.创建cinder数据库<br>CREATE DATABASE cinder;<br>c.创建cinder数据库用户，使其可以对cinder数据库有完全控制权限<br>GRANT ALL PRIVILEGES ON cinder.* TO &#x27;cinder&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;CINDER_DBPASS&#x27;;<br>GRANT ALL PRIVILEGES ON cinder.* TO &#x27;cinder&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;CINDER_DBPASS&#x27;;<br>d.退出数据库<br>exit<br></code></pre></td></tr></table></figure><h4 id="在keystone创建系统用户-glance-nova-neutron-cinder-关联角色"><a href="#在keystone创建系统用户-glance-nova-neutron-cinder-关联角色" class="headerlink" title="在keystone创建系统用户(glance, nova, neutron,cinder)关联角色"></a>在keystone创建系统用户(glance, nova, neutron,cinder)关联角色</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack user create --domain default --password CINDER_PASS cinder<br>openstack role add --project service --user cinder admin<br></code></pre></td></tr></table></figure><h4 id="在keystone上创建服务和注册api-2"><a href="#在keystone上创建服务和注册api-2" class="headerlink" title="在keystone上创建服务和注册api"></a>在keystone上创建服务和注册api</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"> openstack service create --name cinder \<br>  --description &quot;OpenStack Block Storage&quot; volume<br>openstack service create --name cinderv2 \<br>  --description &quot;OpenStack Block Storage&quot; volumev2<br>  <br>openstack endpoint create --region RegionOne \<br>  volume public http://controller:8776/v1/%\(tenant_id\)s<br>openstack endpoint create --region RegionOne \<br>  volume internal http://controller:8776/v1/%\(tenant_id\)s<br>openstack endpoint create --region RegionOne \<br>  volume admin http://controller:8776/v1/%\(tenant_id\)s<br>openstack endpoint create --region RegionOne \<br>  volumev2 public http://controller:8776/v2/%\(tenant_id\)s<br>openstack endpoint create --region RegionOne \<br>  volumev2 internal http://controller:8776/v2/%\(tenant_id\)s<br>openstack endpoint create --region RegionOne \<br>  volumev2 admin http://controller:8776/v2/%\(tenant_id\)s<br></code></pre></td></tr></table></figure><h4 id="安装服务相应软件包-1"><a href="#安装服务相应软件包-1" class="headerlink" title="安装服务相应软件包"></a>安装服务相应软件包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-cinder<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-7"><a href="#修改配置文件-7" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>&#x2F;etc&#x2F;cinder&#x2F;cinder.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/cinder/cinder.conf&#123;,.bak&#125;<br>grep -Ev &#x27;^$|#&#x27; /etc/cinder/cinder.conf.bak &gt;/etc/cinder/cinder.conf<br><br>openstack-config --set /etc/cinder/cinder.conf database connection    mysql+pymysql://cinder:CINDER_DBPASS@controller/cinder<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT rpc_backend    rabbit<br>openstack-config --set /etc/cinder/cinder.conf oslo_messaging_rabbit rabbit_host    controller<br>openstack-config --set /etc/cinder/cinder.conf oslo_messaging_rabbit rabbit_userid    openstack<br>openstack-config --set /etc/cinder/cinder.conf oslo_messaging_rabbit rabbit_password    RABBIT_PASS<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT auth_strategy    keystone<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_uri    http://controller:5000<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_url    http://controller:35357<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken memcached_servers    controller:11211<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_type    password<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken project_domain_name    default<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken user_domain_name    default<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken project_name    service<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken username    cinder<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken password    CINDER_PASS<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT my_ip  172.16.100.28 ###替换自己IP<br>openstack-config --set /etc/cinder/cinder.conf oslo_concurrency lock_path    /var/lib/cinder/tmp<br></code></pre></td></tr></table></figure><h4 id="同步cinder数据库"><a href="#同步cinder数据库" class="headerlink" title="同步cinder数据库"></a>同步cinder数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">su -s /bin/sh -c &quot;cinder-manage db sync&quot; cinder<br></code></pre></td></tr></table></figure><!--同步后进入数据库查看cinder库是否有数据--><!--忽略警告--><p>修改nova配置文件</p><p><strong>&#x2F;etc&#x2F;nova&#x2F;nova.conf</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">openstack-config --set /etc/cinder/cinder.conf cinder os_region_name  RegionOne<br></code></pre></td></tr></table></figure><h4 id="启动服务-6"><a href="#启动服务-6" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart openstack-nova-api.service<br>systemctl enable openstack-cinder-api.service openstack-cinder-scheduler.service<br>systemctl start openstack-cinder-api.service openstack-cinder-scheduler.service<br></code></pre></td></tr></table></figure><h3 id="compute-5"><a href="#compute-5" class="headerlink" title="compute"></a>compute</h3><h4 id="在计算节点安装存储节点-compute"><a href="#在计算节点安装存储节点-compute" class="headerlink" title="在计算节点安装存储节点(compute)"></a>在计算节点安装存储节点(compute)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装支持的工具包</span><br>yum -y install lvm2<br>systemctl enable lvm2-lvmetad.service<br>systemctl start lvm2-lvmetad.service<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">在计算节点新建一块硬盘<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##如果在VM添加的硬盘没有扫描出来,用以下命令</span></span><br>echo &#x27;- - -&#x27; &gt;/sys/class/scsi_host/host&#123;0,1,2&#125;/scan<br><br>[root@compute ~]# lsblk<br>NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sr0              11:0    1 1024M  0 rom  <br>vda             252:0    0   80G  0 disk <br>├─vda1          252:1    0    1G  0 part /boot<br>└─vda2          252:2    0   79G  0 part <br>  ├─centos-root 253:0    0 49.9G  0 lvm  /<br>  ├─centos-swap 253:1    0  4.8G  0 lvm  [SWAP]<br>  └─centos-home 253:2    0 24.3G  0 lvm  /home<br>vdb             252:16   0   80G  0 disk  ###新添加的硬盘<br></code></pre></td></tr></table></figure><h4 id="创建LVM-物理卷"><a href="#创建LVM-物理卷" class="headerlink" title="创建LVM 物理卷"></a>创建LVM 物理卷</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]#  pvcreate /dev/vdb<br>  Physical volume &quot;/dev/vdb&quot; successfully created.<br></code></pre></td></tr></table></figure><h4 id="创建-LVM-卷组-cinder-volumes"><a href="#创建-LVM-卷组-cinder-volumes" class="headerlink" title="创建 LVM 卷组 cinder-volumes"></a>创建 LVM 卷组 cinder-volumes</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@compute ~]# vgcreate cinder-volumes /dev/vdb<br>  Volume group &quot;cinder-volumes&quot; successfully created<br></code></pre></td></tr></table></figure><h4 id="添加一个过滤器-只有实例可以访问块存储卷组"><a href="#添加一个过滤器-只有实例可以访问块存储卷组" class="headerlink" title="添加一个过滤器(只有实例可以访问块存储卷组)"></a>添加一个过滤器(只有实例可以访问块存储卷组)</h4><p><strong>&#x2F;etc&#x2F;lvm&#x2F;lvm.conf</strong> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##大概文件130行左右</span></span><br>filter = [ &quot;a/vdb/&quot;, &quot;r/.*/&quot;]<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#####多盘######filter = [ &quot;a/vdb/&quot;, &quot;a/vdc/&quot;, &quot;r/.*/&quot;]</span></span><br></code></pre></td></tr></table></figure><h4 id="安装服务相应软件包-2"><a href="#安装服务相应软件包-2" class="headerlink" title="安装服务相应软件包"></a>安装服务相应软件包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install openstack-cinder targetcli python-keystone<br></code></pre></td></tr></table></figure><h4 id="修改配置文件-8"><a href="#修改配置文件-8" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><strong>&#x2F;etc&#x2F;cinder&#x2F;cinder.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/cinder/cinder.conf&#123;,.bak&#125;<br>grep -Ev &#x27;^$|#&#x27; /etc/cinder/cinder.conf.bak &gt;/etc/cinder/cinder.conf<br><br>openstack-config --set /etc/cinder/cinder.conf database connection mysql+pymysql://cinder:CINDER_DBPASS@controller/cinder<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT rpc_backend rabbit<br>openstack-config --set /etc/cinder/cinder.conf oslo_messaging_rabbit rabbit_host controller<br>openstack-config --set /etc/cinder/cinder.conf oslo_messaging_rabbit rabbit_userid openstack<br>openstack-config --set /etc/cinder/cinder.conf oslo_messaging_rabbit rabbit_password RABBIT_PASS<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT auth_strategy keystone<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_uri http://controller:5000<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_url http://controller:35357<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken memcached_servers controller:11211<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_type password<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken project_domain_name default<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken user_domain_name default<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken project_name service<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken username cinder<br>openstack-config --set /etc/cinder/cinder.conf keystone_authtoken password CINDER_PASS<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT my_ip 172.16.10.29<br>openstack-config --set /etc/cinder/cinder.conf lvm volume_driver cinder.volume.drivers.lvm.LVMVolumeDriver<br>openstack-config --set /etc/cinder/cinder.conf lvm volume_group cinder-volumes<br>openstack-config --set /etc/cinder/cinder.conf lvm iscsi_protocol  iscsi<br>openstack-config --set /etc/cinder/cinder.conf lvm iscsi_helper lioadm<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT enabled_backends lvm<br>openstack-config --set /etc/cinder/cinder.conf DEFAULT glance_api_servers http://controller:9292<br>openstack-config --set /etc/cinder/cinder.conf oslo_concurrency lock_path /var/lib/cinder/tmp<br></code></pre></td></tr></table></figure><h4 id="启动服务-7"><a href="#启动服务-7" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable openstack-cinder-volume.service target.service<br>systemctl start openstack-cinder-volume.service target.service<br></code></pre></td></tr></table></figure><h4 id="在controller检查是否成功"><a href="#在controller检查是否成功" class="headerlink" title="在controller检查是否成功"></a>在controller检查是否成功</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@controller ~]# cinder service-list<br>+------------------+-------------+------+---------+-------+----------------------------+-----------------+<br>|      Binary      |     Host    | Zone |  Status | State |         Updated_at         | Disabled Reason |<br>+------------------+-------------+------+---------+-------+----------------------------+-----------------+<br>| cinder-scheduler |  controller | nova | enabled |   up  | 2021-11-24T02:01:16.000000 |        -        |<br>|  cinder-volume   | compute@lvm | nova | enabled |   up  | 2021-11-24T02:01:23.000000 |        -        |<br>+------------------+-------------+------+---------+-------+----------------------------+-----------------+<br></code></pre></td></tr></table></figure><h2 id="启动一个实例"><a href="#启动一个实例" class="headerlink" title="启动一个实例"></a>启动一个实例</h2><h3 id="1-创建网络"><a href="#1-创建网络" class="headerlink" title="1.创建网络"></a>1.创建网络</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">neutron net-create --shared --provider:physical_network provider  --provider:network_type flat zzz<br>neutron subnet-create --name  zzz123\<br>  --allocation-pool start=172.16.100.101,end=172.16.100.250 \<br>  --dns-nameserver 114.114.114.114 --gateway 172.16.100.254 \<br>   zzz 172.16.100.0/24<br></code></pre></td></tr></table></figure><h3 id="2-创建云主机的硬件配置方案"><a href="#2-创建云主机的硬件配置方案" class="headerlink" title="2.创建云主机的硬件配置方案"></a>2.创建云主机的硬件配置方案</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">openstack flavor create --id 0 --vcpus 1 --ram 64 --disk 1 m1.nano<br></code></pre></td></tr></table></figure><h3 id="3-创建密钥对"><a href="#3-创建密钥对" class="headerlink" title="3.创建密钥对"></a>3.创建密钥对</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -q -N &quot;&quot; -f ~/.ssh/id_rsa<br>openstack keypair create --public-key ~/.ssh/id_rsa.pub mykey<br>验证是否添加:  openstack keypair list<br></code></pre></td></tr></table></figure><h3 id="4-创建安全组规则"><a href="#4-创建安全组规则" class="headerlink" title="4.创建安全组规则"></a>4.创建安全组规则</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">允许 ICMP (ping)：<br>openstack security group rule create --proto icmp default<br>允许安全 shell (SSH) 的访问：<br>openstack security group rule create --proto tcp --dst-port 22 default<br></code></pre></td></tr></table></figure><h3 id="5-启动一个实例"><a href="#5-启动一个实例" class="headerlink" title="5.启动一个实例"></a>5.启动一个实例</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">查看网络id:  neutron net-list<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##网络id=PROVIDER_NET_ID</span></span><br>创建实例:<br>openstack server create --flavor m1.nano --image cirros \<br>  --nic net-id=PROVIDER_NET_ID --security-group default \<br>  --key-name mykey provider-instance<br>  <br><span class="hljs-meta prompt_">  </span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##查看已创建实例###</span></span><br>[root@controller ~]# openstack server list<br>+--------------------------------------+-------------------+--------+--------------------+<br>| ID                                   | Name              | Status | Networks           |<br>+--------------------------------------+-------------------+--------+--------------------+<br>| f6fa8d1a-13e7-46c9-b5e3-78cfdc3497d5 | provider-instance | ACTIVE | zzz=172.16.100.102 |<br>+--------------------------------------+-------------------+--------+--------------------+<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>openstack-M</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker</title>
    <link href="/2022/04/17/docker/"/>
    <url>/2022/04/17/docker/</url>
    
    <content type="html"><![CDATA[<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的Linux或Windows操作系统的机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p><h2 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">yum -y install yum-utils device-mapper-persistent-data lvm2<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install gcc<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum-config-manager--add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum makecache fast<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install docker-ce<br></code></pre></td></tr></table></figure><h3 id="配置加速"><a href="#配置加速" class="headerlink" title="配置加速"></a>配置加速</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /etc/docker#创建文件夹<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/docker/daemon.json<br><br>&#123;<br>  &quot;registry-mirrors&quot;: [&quot;https://hxqazmaw.mirror.aliyuncs.com&quot;]<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="查看docker进程"><a href="#查看docker进程" class="headerlink" title="查看docker进程"></a>查看docker进程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ps -ef|grep docker<br></code></pre></td></tr></table></figure><h3 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl daemon-reload<br>systemctl start docker<br>systemctl enable docker<br></code></pre></td></tr></table></figure><h2 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker version<br>docker info<br>docker --help<br></code></pre></td></tr></table></figure><h2 id="镜像命令"><a href="#镜像命令" class="headerlink" title="镜像命令"></a>镜像命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker images<br>-a：列出本地所有的镜像（含中间映像层）<br>-q：只显示镜像ID<br>--digests:显示镜像的摘要信息<br>--no-trunc:显示完整的镜像信息<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker search镜像名字（查看镜像）<br>--no-trunc:显示完整的镜像描述<br>-s:列出收藏数不小于指定值的镜像<br>--automated:只列出automated build类型的镜像<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull镜像名字（下载镜像）<br>docker pull镜像名字[:TAG](版本号，否则为最新版本)<br></code></pre></td></tr></table></figure><h3 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">删除镜像<br>删除单个docker rmi -f 镜像ID<br>删除多个docker rmi -f 镜像名1：TAG 镜像名2：TAG<br>删除全部docker rmi -f $(docker images -qa)<br></code></pre></td></tr></table></figure><h3 id="镜像commit"><a href="#镜像commit" class="headerlink" title="镜像commit"></a>镜像commit</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">Docker commit -a=”作者” -m=”提交的描述信息” 容器ID 要创建的目标镜像名:[标签名]<br></code></pre></td></tr></table></figure><h2 id="容器命令"><a href="#容器命令" class="headerlink" title="容器命令"></a>容器命令</h2><h3 id="docker-run"><a href="#docker-run" class="headerlink" title="docker run"></a>docker run</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">Docker run<br>--name=“容器新名字”：为容器指定一个名称<br>-d:后台运行容器，并返回容器ID，也即启动守护式容器<br>-i:以交互模式运行容器，通常与-t同时使用<br>-t:为容器重新分配一个伪输入终端，通常与-i同时使用<br>-P:随机端口映射<br>-p:指定端口映射，有以下四种格式<br>Ip：hostPort:containerPort<br>Ip::containerPOrt<br>HostPort:containerPort<br>containerPort<br></code></pre></td></tr></table></figure><h3 id="docker-ps"><a href="#docker-ps" class="headerlink" title="docker ps"></a>docker ps</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">Docker ps<br>-a:列出当前所有正在运行的容器+历史上运行过的<br>-l:上一个运行的<br>-n:显示最近n个创建的容器<br>-q:静默模式，只显示容器编号<br>--no-trunc:不截断输出<br></code></pre></td></tr></table></figure><h3 id="操作容器"><a href="#操作容器" class="headerlink" title="操作容器"></a>操作容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">启动容器：docker start 容器ID或容器名<br>重启容器：docker restart 容器ID或容器名<br>停止容器：docker stop 容器ID或容器名<br>强制停止容器：docker kill 容器ID或容器名<br>删除已停止容器：docker rm 容器ID（-f 强制）<br></code></pre></td></tr></table></figure><h3 id="一次性删除多个容器"><a href="#一次性删除多个容器" class="headerlink" title="一次性删除多个容器"></a>一次性删除多个容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">Docker rm -f$(docker ps -a  -q)<br>Docker ps -a -q |xargs docker rm<br></code></pre></td></tr></table></figure><h3 id="退出容器"><a href="#退出容器" class="headerlink" title="退出容器"></a>退出容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">Exit<br>Ctrl+P+Q<br></code></pre></td></tr></table></figure><h3 id="启动守护式容器"><a href="#启动守护式容器" class="headerlink" title="启动守护式容器"></a>启动守护式容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d  容器名<br></code></pre></td></tr></table></figure><h3 id="查看容器日志"><a href="#查看容器日志" class="headerlink" title="查看容器日志"></a>查看容器日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker logs -t -f --tail 容器ID<br><br>-t是加入时间戳<br>-f跟随最新的日志打印<br>--tail 数字 显示最后多少条<br></code></pre></td></tr></table></figure><h3 id="查看容器内部细节"><a href="#查看容器内部细节" class="headerlink" title="查看容器内部细节"></a>查看容器内部细节</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker inspect 容器ID<br></code></pre></td></tr></table></figure><h3 id="进入正在运行的容器以命令行交互"><a href="#进入正在运行的容器以命令行交互" class="headerlink" title="进入正在运行的容器以命令行交互"></a>进入正在运行的容器以命令行交互</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">Docker exec -it 容器ID <br>docker attach 容器ID<br><br>Attach：直接进入容器启动命令终端，不会启动新的进程<br>Exec：是在容 器中打开新的终端，并且可以启动新的进程<br></code></pre></td></tr></table></figure><h3 id="从容器内拷贝文件到主机上"><a href="#从容器内拷贝文件到主机上" class="headerlink" title="从容器内拷贝文件到主机上"></a>从容器内拷贝文件到主机上</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker cp 容器ID：容器内路径 目的主机路径<br></code></pre></td></tr></table></figure><h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><p>Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明</p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><table><thead><tr><th>Build</th><th>Both</th><th>Run</th></tr></thead><tbody><tr><td>FROM</td><td>WORKDIR</td><td>CMD</td></tr><tr><td>MAINTAINER</td><td>USER</td><td>ENV</td></tr><tr><td>COPY</td><td></td><td>EXPOSE</td></tr><tr><td>ADD</td><td></td><td>VOLUME</td></tr><tr><td>RUN</td><td></td><td>ENTRYPOINT</td></tr><tr><td>ONBUILD</td><td></td><td></td></tr><tr><td>.dockerignore</td><td></td><td></td></tr></tbody></table><h2 id="命令详解"><a href="#命令详解" class="headerlink" title="命令详解"></a>命令详解</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">FROM 基础镜像,当前新镜像是基于哪个镜像的<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">MAINTAINER 镜像维护者的姓名和邮箱地址<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">RUN 容器构建时需要运行的命令<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">EXPOSE当前容器对外暴露出的端口<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">WORKDIR指定在创建容器后,终端默认登入进来的工作目录,一个落脚点<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ENV用来在构建镜像过程中设置环境变量<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ADD将宿主机目录下的文件拷贝进镜像且ADD命令会自动处理URL和解压tar压缩包<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">COPY类似ADD,拷贝文件和目录到镜像中<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">VOLUME容器数据卷,用于数据保存和持久化工作<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">CMD指定一个容器启动时要运行的命令,可以有多个CMD,但只有最后一个生效<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ENTRYPOINT指定一个容器启动时要运行的命令,目的和CMD一样,但多个都会生效<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ONBUILD当构建一个被继承的Dockerfile时运行命令,父镜像在被子继承后父镜像的onbuild被触发<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker learn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>github-error</title>
    <link href="/2022/04/17/github-error/"/>
    <url>/2022/04/17/github-error/</url>
    
    <content type="html"><![CDATA[<h2 id="1-error"><a href="#1-error" class="headerlink" title="1.error"></a>1.error</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">fatal:</span> 不是 git 仓库（或者任何父目录）：.git<br></code></pre></td></tr></table></figure><p>解决:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim _config.yml<br><br>highlight:<br>  enable: flash<br></code></pre></td></tr></table></figure><h2 id="2-error"><a href="#2-error" class="headerlink" title="2.error"></a>2.error</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ERROR Deployer not found: git<br></code></pre></td></tr></table></figure><p>解决:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github+hexo error</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>go</title>
    <link href="/2022/04/17/go/"/>
    <url>/2022/04/17/go/</url>
    
    <content type="html"><![CDATA[<h1 id="GO"><a href="#GO" class="headerlink" title="GO"></a>GO</h1><p>###编译型语言</p><p>*特点</p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">1.语法简洁<br>2.开发效率高<br>3.执行性能好<br></code></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><h3 id="go-build"><a href="#go-build" class="headerlink" title="go build"></a>go build</h3><p>1.在项目目录下执行go build</p><p>2.在其他路径下执行go build，需要在后面加上项目的路径（项目路径从GOPATH&#x2F;src后开始写起，编译之后的可执行文件就保存在当前目录下）</p><p>3.go build -o hello.exe</p><h3 id="go-run"><a href="#go-run" class="headerlink" title="go run"></a>go run</h3><p>像执行脚本文件一样执行Go代码</p><h3 id="go-install"><a href="#go-install" class="headerlink" title="go install"></a>go install</h3><p>go install 分为两步:<br>1.先编译得到一个可执行文件<br>2.将执行文件拷贝到<code>GOPATH/bin</code></p><h3 id="跨平台编译"><a href="#跨平台编译" class="headerlink" title="跨平台编译"></a>跨平台编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs bash">SET CGO_ENABLED=0  // 禁用CGO<br>SET GOOS=windows  // 目标平台是windows<br>SET GOARCH=amd64  // 目标处理器架构是amd64<br><br><span class="hljs-comment">#Windows编译Mac可执行文件</span><br>SET CGO_ENABLED=0<br>SET GOOS=darwin<br>SET GOARCH=amd64<br>go build<br><br><span class="hljs-comment">#PowerShell</span><br><span class="hljs-comment">##使用环境变量的语法</span><br><span class="hljs-variable">$ENV</span>:CGO_ENABLED=0<br><span class="hljs-variable">$ENV</span>:GOOS=<span class="hljs-string">&quot;darwin&quot;</span><br><span class="hljs-variable">$ENV</span>:GOARCH=<span class="hljs-string">&quot;amd64&quot;</span><br>go build<br><br><span class="hljs-comment">#Linux编译Windows可执行文件</span><br>CGO_ENABLED=0 <br>GOOS=windows <br>GOARCH=amd64 <br>go build<br><br><span class="hljs-comment">#Linux编译Mac可执行文件</span><br>CGO_ENABLED=0 <br>GOOS=darwin <br>GOARCH=amd64 <br>go build<br><br><span class="hljs-comment">#Mac编译Linux可执行文件</span><br><span class="hljs-built_in">export</span> CGO_ENABLED=0 <br><span class="hljs-built_in">export</span> GOOS=linux <br><span class="hljs-built_in">export</span> GOARCH=amd64 <br>go build<br><br><span class="hljs-comment">#Mac编译Windows可执行文件</span><br><span class="hljs-built_in">export</span> CGO_ENABLED=0 <br><span class="hljs-built_in">export</span> GOOS=windows <br><span class="hljs-built_in">export</span> GOARCH=amd64 <br>go build<br></code></pre></td></tr></table></figure><h3 id="go语言中有25个关键字"><a href="#go语言中有25个关键字" class="headerlink" title="go语言中有25个关键字"></a>go语言中有25个关键字</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">break</span>        <span class="hljs-keyword">default</span>      <span class="hljs-function"><span class="hljs-keyword">func</span>         <span class="hljs-title">interface</span>    <span class="hljs-title">select</span></span><br><span class="hljs-keyword">case</span>         <span class="hljs-keyword">defer</span>        <span class="hljs-keyword">go</span>           <span class="hljs-keyword">map</span>          <span class="hljs-keyword">struct</span><br><span class="hljs-keyword">chan</span>         <span class="hljs-keyword">else</span>         <span class="hljs-keyword">goto</span>         <span class="hljs-keyword">package</span>      <span class="hljs-keyword">switch</span><br><span class="hljs-keyword">const</span>        <span class="hljs-keyword">fallthrough</span>  <span class="hljs-keyword">if</span>           <span class="hljs-keyword">range</span>        <span class="hljs-keyword">type</span><br><span class="hljs-keyword">continue</span>     <span class="hljs-keyword">for</span>          <span class="hljs-keyword">import</span>       <span class="hljs-keyword">return</span>       <span class="hljs-keyword">var</span><br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">注意事项：<br><br>1. 函数外的每个语句都必须以关键字开始（var、const、func等）<br>2. `:=`不能使用在函数外。<br>3. `_`多用于占位，表示忽略值。<br></code></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">var 变量声明<br><br>匿名变量  在使用多重赋值时，如果想要忽略某个值，可以使用匿名变量（anonymous variable）。 匿名变量用一个下划线_表示,匿名变量不占用命名空间，不会分配内存，所以匿名变量之间不存在重复声明。<br><br>const相对于变量，常量是恒定不变的值，多用于定义程序运行期间不会改变的那些值。 常量的声明和变量声明非常类似，只是把var换成了const，常量在定义的时候必须赋值。<br><br>iost 是go语言的常量计数器，只能在常量的表达式中使用。<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">转义符</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center"><code>\r</code></td><td align="center">回车符（返回行首）</td></tr><tr><td align="center"><code>\n</code></td><td align="center">换行符（直接跳到下一行的同列位置）</td></tr><tr><td align="center"><code>\t</code></td><td align="center">制表符</td></tr><tr><td align="center"><code>\&#39;</code></td><td align="center">单引号</td></tr><tr><td align="center"><code>\&quot;</code></td><td align="center">双引号</td></tr><tr><td align="center"><code>\\</code></td><td align="center">反斜杠</td></tr></tbody></table><table><thead><tr><th>格式化指令</th><th>含义</th></tr></thead><tbody><tr><td>%%</td><td>%字面量</td></tr><tr><td>%b</td><td>一个二进制整数，将一个整数格式转化为二进制的表达方式</td></tr><tr><td>%c</td><td>一个Unicode的字符</td></tr><tr><td>%d</td><td>十进制整数</td></tr><tr><td>%o</td><td>八进制整数</td></tr><tr><td>%x</td><td>小写的十六进制数值</td></tr><tr><td>%X</td><td>大写的十六进制数值</td></tr><tr><td>%U</td><td>一个Unicode表示法表示的整型码值</td></tr><tr><td>%s</td><td>输出以原生的UTF8字节表示的字符，如果console不支持utf8编码，则会乱码</td></tr><tr><td>%t</td><td>以true或者false的方式输出布尔值</td></tr><tr><td>%v</td><td>使用默认格式输出值，或者如果方法存在，则使用类性值的String()方法输出自定义值</td></tr><tr><td>%T</td><td>输出值的类型</td></tr></tbody></table><p><strong>var</strong>（声明变量）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-comment">//声明变量</span><br><span class="hljs-comment">// var name string</span><br><span class="hljs-comment">// var age int</span><br><span class="hljs-comment">// yes  bool</span><br><br><span class="hljs-comment">// 批量声明</span><br><span class="hljs-keyword">var</span> (<br>name <span class="hljs-type">string</span> <span class="hljs-comment">// “”</span><br>age  <span class="hljs-type">int</span>    <span class="hljs-comment">// 0</span><br>yes  <span class="hljs-type">bool</span>   <span class="hljs-comment">// false</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>name = <span class="hljs-string">&quot;zzz&quot;</span><br>age = <span class="hljs-number">18</span><br>yes = <span class="hljs-literal">true</span><br><span class="hljs-comment">// var zyl int</span><br><span class="hljs-comment">// Go语言中非全局变量声明后必须使用,不使用就编译不过去</span><br>fmt.Print(yes)                <span class="hljs-comment">//在终端输出要打印的内容</span><br>fmt.Printf(<span class="hljs-string">&quot;name:%s\n&quot;</span>, name) <span class="hljs-comment">// %s是占位符 使用name变量值去替换%s</span><br>fmt.Println(age)              <span class="hljs-comment">// 打印完指定的内容之后会在后面加一个换行符</span><br><br><span class="hljs-comment">// 声明变量同时赋值</span><br><span class="hljs-keyword">var</span> zyl <span class="hljs-type">string</span> = <span class="hljs-string">&quot;test&quot;</span><br>fmt.Println(zyl)<br><br><span class="hljs-comment">// 类型推倒（根据值判断该变量是什么类型）</span><br><span class="hljs-keyword">var</span> age1 = <span class="hljs-string">&quot;20&quot;</span><br>fmt.Println(age1)<br><br><span class="hljs-comment">// 简短变量声明,只能在函数中声明</span><br>s1 := <span class="hljs-string">&quot;哈哈哈&quot;</span><br>fmt.Println(s1)<br><span class="hljs-comment">// 同一个作用域(&#123;&#125;)中不能重复声明同名变量</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="if-和-for"><a href="#if-和-for" class="headerlink" title="if 和 for"></a>if 和 for</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>score := <span class="hljs-number">65</span><br><span class="hljs-keyword">if</span> score &gt;= <span class="hljs-number">90</span> &#123;<br>fmt.Println(<span class="hljs-string">&quot;A&quot;</span>)<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> score &gt; <span class="hljs-number">75</span> &#123;<br>fmt.Println(<span class="hljs-string">&quot;B&quot;</span>)<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>fmt.Println(<span class="hljs-string">&quot;C&quot;</span>)<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">demo1</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">if</span> score := <span class="hljs-number">65</span>; score &gt;= <span class="hljs-number">90</span> &#123;<br>fmt.Println(<span class="hljs-string">&quot;A&quot;</span>)<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> score &gt; <span class="hljs-number">75</span> &#123;<br>fmt.Println(<span class="hljs-string">&quot;B&quot;</span>)<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>fmt.Println(<span class="hljs-string">&quot;C&quot;</span>)<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">demo2</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++ &#123;<br>fmt.Println(i)<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">demo3</span><span class="hljs-params">()</span></span> &#123;<br>i := <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> ; i &lt; <span class="hljs-number">10</span>; i++ &#123;<br>fmt.Println(i)<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 无限循环</span><br><span class="hljs-comment">// for &#123;</span><br><span class="hljs-comment">//     循环体语句</span><br><span class="hljs-comment">// &#125;</span><br></code></pre></td></tr></table></figure><p>for range：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;fmt&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">for</span> i := <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">10</span>; i++ &#123;<br>fmt.Println(i)<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>s := <span class="hljs-string">&quot;hello 世界！&quot;</span><br><span class="hljs-keyword">for</span> i, v := <span class="hljs-keyword">range</span> s &#123;<br>fmt.Printf(<span class="hljs-string">&quot;%d %c\n&quot;</span>, i, v)<br>&#125;<br>&#125;<br><span class="hljs-comment">//九九乘法表</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">for</span> i := <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">10</span>; i++ &#123;<br><span class="hljs-keyword">for</span> j := <span class="hljs-number">1</span>; j &lt;= i; j++ &#123;<br>q := i * j<br>fmt.Printf(<span class="hljs-string">&quot;%d*%d=%d &quot;</span>, j, i, q)<br>&#125;<br>fmt.Println()<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="const-into"><a href="#const-into" class="headerlink" title="const into"></a>const into</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-comment">// 常量定义</span><br><span class="hljs-keyword">const</span> pi = <span class="hljs-number">3.1415926</span><br><br><span class="hljs-comment">// 多常量定义</span><br><span class="hljs-keyword">const</span> (<br>n1 = <span class="hljs-number">100</span><br>n2<br>n3<br>)<br><br><span class="hljs-comment">// iota是go语言的常量计数器，只能在常量的表达式中使用。</span><br><span class="hljs-comment">// iota在const关键字出现时将被重置为0。const中每新增一行常量声明将使iota计数一次(iota可理解为const语句块中的行索引)。 使用iota能简化定义，在定义枚举时很有用。</span><br><span class="hljs-comment">// 定义数量级</span><br><span class="hljs-keyword">const</span> (<br>_  = <span class="hljs-literal">iota</span><br>KB = <span class="hljs-number">1</span> &lt;&lt; (<span class="hljs-number">10</span> * <span class="hljs-literal">iota</span>)<br>MB = <span class="hljs-number">1</span> &lt;&lt; (<span class="hljs-number">10</span> * <span class="hljs-literal">iota</span>)<br>GB = <span class="hljs-number">1</span> &lt;&lt; (<span class="hljs-number">10</span> * <span class="hljs-literal">iota</span>)<br>TB = <span class="hljs-number">1</span> &lt;&lt; (<span class="hljs-number">10</span> * <span class="hljs-literal">iota</span>)<br>PB = <span class="hljs-number">1</span> &lt;&lt; (<span class="hljs-number">10</span> * <span class="hljs-literal">iota</span>)<br>)<br><br><span class="hljs-comment">// iota</span><br><span class="hljs-keyword">const</span> (<br>a1 = <span class="hljs-literal">iota</span> <span class="hljs-comment">//0</span><br>a2        <span class="hljs-comment">//1</span><br>a3        <span class="hljs-comment">//2</span><br>a4        <span class="hljs-comment">//3</span><br>)<br><br><span class="hljs-comment">// _跳过某些值</span><br><span class="hljs-keyword">const</span> (<br>b1 = <span class="hljs-literal">iota</span> <span class="hljs-comment">//0</span><br>b2        <span class="hljs-comment">//1</span><br>_<br>b3 <span class="hljs-comment">//3</span><br>)<br><br><span class="hljs-comment">// iota声明中间隔常量</span><br><span class="hljs-keyword">const</span> (<br>c1 = <span class="hljs-literal">iota</span> <span class="hljs-comment">//0</span><br>c2 = <span class="hljs-number">100</span>  <span class="hljs-comment">//100</span><br>c3 = <span class="hljs-literal">iota</span> <span class="hljs-comment">//2</span><br>c4        <span class="hljs-comment">//3</span><br>)<br><span class="hljs-keyword">const</span> n5 = <span class="hljs-literal">iota</span> <span class="hljs-comment">//0</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// fmt.Println(n1)</span><br><span class="hljs-comment">// fmt.Println(n2)</span><br><span class="hljs-comment">// fmt.Println(n3)</span><br><br>fmt.Println(<span class="hljs-string">&quot;a1:&quot;</span>, a1)<br>fmt.Println(<span class="hljs-string">&quot;a2:&quot;</span>, a2)<br>fmt.Println(<span class="hljs-string">&quot;a3:&quot;</span>, a3)<br>fmt.Println(<span class="hljs-string">&quot;a4:&quot;</span>, a4)<br><br>fmt.Println(<span class="hljs-string">&quot;b1:&quot;</span>, b1)<br>fmt.Println(<span class="hljs-string">&quot;b2:&quot;</span>, b2)<br>fmt.Println(<span class="hljs-string">&quot;b3:&quot;</span>, b3)<br><br>fmt.Println(<span class="hljs-string">&quot;c1:&quot;</span>, c1)<br>fmt.Println(<span class="hljs-string">&quot;c2:&quot;</span>, c2)<br>fmt.Println(<span class="hljs-string">&quot;c3:&quot;</span>, c3)<br>fmt.Println(<span class="hljs-string">&quot;c4:&quot;</span>, c4)<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="switch和goto"><a href="#switch和goto" class="headerlink" title="switch和goto"></a>switch和goto</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">//switch</span><br><span class="hljs-comment">//简化大量的判断 （一个变量和具体的做比较）</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">var</span> n = <span class="hljs-number">5</span><br><span class="hljs-comment">// if n == 1 &#123;</span><br><span class="hljs-comment">// fmt.Println(&quot;大拇指&quot;)</span><br><span class="hljs-comment">// &#125; else if n == 2 &#123;</span><br><span class="hljs-comment">// fmt.Println(&quot;食指&quot;)</span><br><span class="hljs-comment">// &#125; else if n == 3 &#123;</span><br><span class="hljs-comment">// fmt.Println(&quot;中指&quot;)</span><br><span class="hljs-comment">// &#125; else if n == 4 &#123;</span><br><span class="hljs-comment">// fmt.Println(&quot;无名指&quot;)</span><br><span class="hljs-comment">// &#125; else if n == 5 &#123;</span><br><span class="hljs-comment">// fmt.Println(&quot;小母指&quot;)</span><br><span class="hljs-comment">// &#125; else &#123;</span><br><span class="hljs-comment">// fmt.Println(&quot;判断错误！&quot;)</span><br><span class="hljs-comment">// &#125;</span><br><span class="hljs-comment">// switch 简化</span><br><span class="hljs-keyword">switch</span> n &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>fmt.Println(<span class="hljs-string">&quot;大拇指&quot;</span>)<br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>fmt.Println(<span class="hljs-string">&quot;食指&quot;</span>)<br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>fmt.Println(<span class="hljs-string">&quot;中指&quot;</span>)<br><span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br>fmt.Println(<span class="hljs-string">&quot;无名指&quot;</span>)<br><span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>fmt.Println(<span class="hljs-string">&quot;小母指&quot;</span>)<br><span class="hljs-keyword">default</span>:<br>fmt.Println(<span class="hljs-string">&quot;判断错误！&quot;</span>)<br>&#125;<br><span class="hljs-comment">// goto+label实现跳出多层for循环</span><br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++ &#123;<br><span class="hljs-keyword">for</span> j := <span class="hljs-string">&#x27;A&#x27;</span>; j &lt; <span class="hljs-string">&#x27;Z&#x27;</span>; j++ &#123;<br><span class="hljs-keyword">if</span> j == <span class="hljs-string">&#x27;D&#x27;</span> &#123;<br><span class="hljs-keyword">goto</span> xx <span class="hljs-comment">//跳出循环到指定的标签</span><br>&#125;<br>fmt.Printf(<span class="hljs-string">&quot;%d %c\n&quot;</span>, i, j)<br>&#125;<br>&#125;<br>xx: <span class="hljs-comment">//label标签</span><br>fmt.Println(<span class="hljs-string">&quot;hello world&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Array-数组"><a href="#Array-数组" class="headerlink" title="Array(数组)"></a>Array(数组)</h2><p>数组是同一种数据类型元素的集合。 在Go语言中，数组从声明时就确定，使用时可以修改数组成员，但是数组大小不可变化。 基本语法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// 定义一个长度为3元素类型为int的数组a</span><br><span class="hljs-keyword">var</span> a [<span class="hljs-number">3</span>]<span class="hljs-type">int</span><br></code></pre></td></tr></table></figure><p>数组定义：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">var</span> 数组变量名 [元素数量]T<br></code></pre></td></tr></table></figure><p><strong>eg：</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-comment">//数组</span><br><span class="hljs-comment">//存放元素的容器</span><br><span class="hljs-comment">//必须指定存放的元素的类型和容量（长度）</span><br><span class="hljs-comment">//数组的长度是数组类型的一部分</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">var</span> a1 [<span class="hljs-number">3</span>]<span class="hljs-type">bool</span><br><span class="hljs-keyword">var</span> a2 [<span class="hljs-number">4</span>]<span class="hljs-type">bool</span><br>fmt.Printf(<span class="hljs-string">&quot;类型：a1:%T a2:%T\n&quot;</span>, a1, a2)<br><br><span class="hljs-comment">//数组初始化</span><br><span class="hljs-comment">//数组不初始化默认元素为零（布偶值:false,整型和浮点型都是0,字符串:&quot;&quot;）</span><br>fmt.Println(<span class="hljs-string">&quot;默认值：&quot;</span>, a1, a2)<br><br><span class="hljs-comment">//初始化</span><br><br><span class="hljs-comment">//方式一</span><br>a1 = [<span class="hljs-number">3</span>]<span class="hljs-type">bool</span>&#123;<span class="hljs-literal">true</span>, <span class="hljs-literal">true</span>, <span class="hljs-literal">true</span>&#125;<br>fmt.Println(<span class="hljs-string">&quot;方式一:&quot;</span>, a1)<br><br><span class="hljs-comment">//方式二</span><br><span class="hljs-comment">// 根据初始值自动判断数组的长度是多少</span><br>a10 := [...]<span class="hljs-type">int</span>&#123;<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>&#125;<br>fmt.Println(<span class="hljs-string">&quot;方式二:&quot;</span>, a10)<br><br><span class="hljs-comment">//方式三</span><br><span class="hljs-comment">//根据索引来初始化</span><br>a3 := [<span class="hljs-number">5</span>]<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>&#125;<br>fmt.Println(<span class="hljs-string">&quot;方式三:&quot;</span>, a3)<br>a4 := [<span class="hljs-number">5</span>]<span class="hljs-type">int</span>&#123;<span class="hljs-number">0</span>: <span class="hljs-number">1</span>, <span class="hljs-number">4</span>: <span class="hljs-number">2</span>&#125;<br>fmt.Println(<span class="hljs-string">&quot;方式三:&quot;</span>, a4)<br><br><span class="hljs-comment">// //数组的遍历</span><br><span class="hljs-comment">// citys := [...]string&#123;&quot;北京&quot;, &quot;上海&quot;, &quot;深圳&quot;&#125;</span><br><span class="hljs-comment">// //1.根据索引遍历</span><br><span class="hljs-comment">// for i := 0; i &lt; len(citys); i++ &#123;</span><br><span class="hljs-comment">// fmt.Println(citys[i])</span><br><span class="hljs-comment">// &#125;</span><br><span class="hljs-comment">// for i, v := range citys &#123;</span><br><span class="hljs-comment">// fmt.Println(i, v)</span><br><span class="hljs-comment">// &#125;</span><br><br><span class="hljs-comment">//多维数组</span><br><span class="hljs-keyword">var</span> a5 [<span class="hljs-number">3</span>][<span class="hljs-number">2</span>]<span class="hljs-type">int</span><br>a5 = [<span class="hljs-number">3</span>][<span class="hljs-number">2</span>]<span class="hljs-type">int</span>&#123;<br>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>&#125;,<br>&#123;<span class="hljs-number">3</span>, <span class="hljs-number">4</span>&#125;,<br>&#123;<span class="hljs-number">5</span>, <span class="hljs-number">6</span>&#125;,<br>&#125;<br>fmt.Println(<span class="hljs-string">&quot;多维数组：&quot;</span>,a5)<br><br><span class="hljs-comment">//多维数组遍历</span><br>fmt.Println(<span class="hljs-string">&quot;多维数组遍历:&quot;</span>)<br><span class="hljs-keyword">for</span> _,v1 := <span class="hljs-keyword">range</span> a5 &#123;<br>fmt.Println(v1)<br><span class="hljs-keyword">for</span> _,v2 := <span class="hljs-keyword">range</span> v1&#123;<br>fmt.Println(v2)<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="slice-切片"><a href="#slice-切片" class="headerlink" title="slice(切片)"></a>slice(切片)</h2><p>切片的本质</p><p>切片就是一个框，框住了一块连续的内存</p><p>切片属于引用类型，真正的数据都是保存在底层数组里的</p><p>判断一个切片是否为空,要使用len(s) &#x3D;&#x3D; 0 来判断</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-comment">// 切片slice</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// 切片定义</span><br><span class="hljs-keyword">var</span> a1 []<span class="hljs-type">int</span>    <span class="hljs-comment">//定义一个存放int类型元素的切片</span><br><span class="hljs-keyword">var</span> a2 []<span class="hljs-type">string</span> <span class="hljs-comment">//定义一个存放string类型元素的切片</span><br>fmt.Println(a1, a2)<br>fmt.Println(a1 == <span class="hljs-literal">nil</span>) <span class="hljs-comment">// nil==null</span><br>fmt.Println(a2 == <span class="hljs-literal">nil</span>)<br><span class="hljs-comment">//初始化</span><br>a1 = []<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>&#125;<br>a2 = []<span class="hljs-type">string</span>&#123;<span class="hljs-string">&quot;哈哈&quot;</span>, <span class="hljs-string">&quot;嘿嘿&quot;</span>, <span class="hljs-string">&quot;哦噢&quot;</span>&#125;<br>fmt.Println(a1, a2)<br>fmt.Println(a1 == <span class="hljs-literal">nil</span>)<br>fmt.Println(a2 == <span class="hljs-literal">nil</span>)<br><br><span class="hljs-comment">//长度和容量(len cap)</span><br>fmt.Printf(<span class="hljs-string">&quot;len(a1):%d cap(a1):%d\n&quot;</span>, <span class="hljs-built_in">len</span>(a1), <span class="hljs-built_in">cap</span>(a1))<br>fmt.Printf(<span class="hljs-string">&quot;len(a2):%d cap(a2):%d\n&quot;</span>, <span class="hljs-built_in">len</span>(a2), <span class="hljs-built_in">cap</span>(a2))<br><span class="hljs-comment">//切片的容量是指从底层数组切片的第一个元素到最后一个元素</span><br>    <br>   <span class="hljs-comment">//make() 函数创造切片</span><br>a3 := <span class="hljs-built_in">make</span>([]<span class="hljs-type">int</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>)<br>fmt.Printf(<span class="hljs-string">&quot;a3=%v len:%d cap:%d\n&quot;</span>, a3, <span class="hljs-built_in">len</span>(a3), <span class="hljs-built_in">cap</span>(a3))<br><br>a4 := <span class="hljs-built_in">make</span>([]<span class="hljs-type">int</span>, <span class="hljs-number">0</span>, <span class="hljs-number">10</span>)<br>fmt.Printf(<span class="hljs-string">&quot;a4=%v len:%d cap:%d\n&quot;</span>, a4, <span class="hljs-built_in">len</span>(a4), <span class="hljs-built_in">cap</span>(a4))<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="append"><a href="#append" class="headerlink" title="append()"></a>append()</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// append()为切片追加元素</span><br><br>a5 := []<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>&#125;<br><span class="hljs-comment">// a5[5] = 6 //错误写法 索引越界</span><br><span class="hljs-comment">// append追加元素，原来底层数组放不下的时候，GO底层就会把底层数组换一个</span><br>a5 = <span class="hljs-built_in">append</span>(a5, <span class="hljs-number">6</span>) <span class="hljs-comment">// 调用append函数必须用原来的切片变量接收返回值</span><br>fmt.Printf(<span class="hljs-string">&quot;a5=%v len(a5)=%d cap(a5)=%d\n&quot;</span>, a5, <span class="hljs-built_in">len</span>(a5), <span class="hljs-built_in">cap</span>(a5))<br><br>aa := []<span class="hljs-type">int</span>&#123;<span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span> , <span class="hljs-number">10</span>&#125;<br>a5 = <span class="hljs-built_in">append</span>(a5, aa...) <span class="hljs-comment">// ...表示拆开</span><br>fmt.Printf(<span class="hljs-string">&quot;a5=%v len(a5)=%d cap(a5)=%d\n&quot;</span>, a5, <span class="hljs-built_in">len</span>(a5), <span class="hljs-built_in">cap</span>(a5))<br></code></pre></td></tr></table></figure><p>切片扩容策略</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">首先判断，如果新申请容量（cap）大于2倍的旧容量（old.cap），最终容量（newcap）就是新申请的容量（cap）。<br>否则判断，如果旧切片的长度小于1024，则最终容量(newcap)就是旧容量(old.cap)的两倍，即（newcap=doublecap），<br>否则判断，如果旧切片长度大于等于1024，则最终容量（newcap）从旧容量（old.cap）开始循环增加原来的1/4，即（newcap=old.cap,for &#123;newcap += newcap/4&#125;）直到最终容量（newcap）大于等于新申请的容量(cap)，即（newcap &gt;= cap）<br>如果最终容量（cap）计算值溢出，则最终容量（cap）就是新申请容量（cap）。<br>注意：切片扩容还会根据切片中元素的类型不同而做不同的处理，比如int和string类型的处理方式就不一样。<br></code></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs go">newcap := old.<span class="hljs-built_in">cap</span><br>doublecap := newcap + newcap<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">cap</span> &gt; doublecap &#123;<br>newcap = <span class="hljs-built_in">cap</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> old.<span class="hljs-built_in">len</span> &lt; <span class="hljs-number">1024</span> &#123;<br>newcap = doublecap<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// Check 0 &lt; newcap to detect overflow</span><br><span class="hljs-comment">// and prevent an infinite loop.</span><br><span class="hljs-keyword">for</span> <span class="hljs-number">0</span> &lt; newcap &amp;&amp; newcap &lt; <span class="hljs-built_in">cap</span> &#123;<br>newcap += newcap / <span class="hljs-number">4</span><br>&#125;<br><span class="hljs-comment">// Set newcap to the requested cap when</span><br><span class="hljs-comment">// the newcap calculation overflowed.</span><br><span class="hljs-keyword">if</span> newcap &lt;= <span class="hljs-number">0</span> &#123;<br>newcap = <span class="hljs-built_in">cap</span><br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="copy"><a href="#copy" class="headerlink" title="copy()"></a>copy()</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">// copy()复制切片</span><br>a6 := a5<br><span class="hljs-selector-tag">var</span> a7 = <span class="hljs-built_in">make</span>(<span class="hljs-selector-attr">[]</span>int,<span class="hljs-number">10</span>,<span class="hljs-number">10</span>) <span class="hljs-comment">//需要计算好长度和容量</span><br><span class="hljs-function"><span class="hljs-title">copy</span><span class="hljs-params">(a7, a5)</span></span><br>fmt<span class="hljs-selector-class">.Println</span>(a6,a7)<br></code></pre></td></tr></table></figure><h2 id="数组和切片的区别"><a href="#数组和切片的区别" class="headerlink" title="数组和切片的区别"></a>数组和切片的区别</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">1.声明方式不同，数组声明需要指定长度（无论是显式指定还是编译器根据元素个数推断都是指定），切片则不用；<br><br>2.数组长度固定，无法改变，切片长度不固定，可以自动扩容；<br><br>3.数组是值类型，切片是引用类型。数组在作为参数传递时，是直接在内存中拷贝了一份数据进行传递，切片则传递的是引用地址，所以在方法中对数组进行修改不会影响原数组，而切片则会受影响；<br><br>4.切片可以用cap函数计算容量、len函数计算长度，数组只有len函数计算长度，换句话说，切片比数组多一个cap属性；<br><br>5.切片的底层是数组。<br><br>数组作为参数传递不会影响原数组的前提是：数组里面的元素不是指针，因为如果传递的数组里面的元素是指针，那么通过修改元素指针指向的值，也会影响到原数组中的数据。还有一种情况就是，将数组的指针作为参数传递，这样也会影响到原数组，但是这个实际上已经不是数组作为参数传递了，而是指针作为参数传递。<br></code></pre></td></tr></table></figure><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">&amp;：取地址<br>*：根据地址取值<br></code></pre></td></tr></table></figure><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>map是一种无序的基于<code>key-value</code>的数据结构，Go语言中的map是引用类型，必须初始化才能使用。</p><p>map类型的变量默认初始值为nil，需要使用make()函数来分配内存。语法为：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[KeyType]ValueType, [<span class="hljs-built_in">cap</span>])<br></code></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;fmt&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>a := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">int</span>, <span class="hljs-number">5</span>)<br>a[<span class="hljs-string">&quot;哈哈&quot;</span>] = <span class="hljs-number">100</span><br>a[<span class="hljs-string">&quot;哦噢&quot;</span>] = <span class="hljs-number">101</span><br>a[<span class="hljs-string">&quot;阿阿&quot;</span>] = <span class="hljs-number">102</span><br>fmt.Println(a[<span class="hljs-string">&quot;哈哈&quot;</span>])<br>fmt.Printf(<span class="hljs-string">&quot;type(a):%T\n&quot;</span>, a)<br><br><span class="hljs-comment">// map支持在声明的时候填充元素</span><br>a1 := <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">string</span>&#123;<br><span class="hljs-string">&quot;username&quot;</span>: <span class="hljs-string">&quot;admin&quot;</span>,<br><span class="hljs-string">&quot;password&quot;</span>: <span class="hljs-string">&quot;123456&quot;</span>,<br>&#125;<br>fmt.Println(a1)<br><br><span class="hljs-comment">//判断key是否存在</span><br>a2 := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">string</span>)<br>a2[<span class="hljs-string">&quot;username&quot;</span>] = <span class="hljs-string">&quot;admin&quot;</span><br>a2[<span class="hljs-string">&quot;password&quot;</span>] = <span class="hljs-string">&quot;123456&quot;</span><br>v, ok := a2[<span class="hljs-string">&quot;password&quot;</span>]<br><span class="hljs-keyword">if</span> ok &#123;<br>fmt.Println(v)<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>fmt.Println(<span class="hljs-string">&quot;error&quot;</span>)<br>&#125;<br><br><span class="hljs-comment">// map 遍历</span><br><span class="hljs-keyword">for</span> k, v := <span class="hljs-keyword">range</span> a2 &#123;<br>fmt.Println(k, v)<br>&#125;<br><span class="hljs-comment">//遍历key</span><br><span class="hljs-keyword">for</span> k := <span class="hljs-keyword">range</span> a2 &#123;<br>fmt.Println(k)<br>&#125;<br><span class="hljs-comment">//遍历values</span><br><span class="hljs-keyword">for</span> _, v = <span class="hljs-keyword">range</span> a2 &#123;<br>fmt.Println(v)<br>&#125;<br><br><span class="hljs-comment">//delete 删除</span><br><span class="hljs-built_in">delete</span>(a2, <span class="hljs-string">&quot;password&quot;</span>)<br>fmt.Println(a2)<br><br><span class="hljs-comment">//元素类型为map的切片</span><br><span class="hljs-keyword">var</span> a8 = <span class="hljs-built_in">make</span>([]<span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">string</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>)<br><span class="hljs-comment">//没有对内部的map做初始化</span><br>a8[<span class="hljs-number">0</span>] = <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">string</span>, <span class="hljs-number">1</span>)<br>a8[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;username&quot;</span>] = <span class="hljs-string">&quot;admin&quot;</span><br>fmt.Println(a8)<br><br><span class="hljs-comment">// 值为切片类型的map</span><br><span class="hljs-keyword">var</span> a9 = <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>][]<span class="hljs-type">int</span>,<span class="hljs-number">10</span>)<br>a9[<span class="hljs-string">&quot;username&quot;</span>] = []<span class="hljs-type">int</span>&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;<br>fmt.Println(a9)<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="func-函数"><a href="#func-函数" class="headerlink" title="func(函数)"></a>func(函数)</h2><p>函数是组织好的、可重复使用的、用于执行指定任务的代码块。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-comment">// 函数</span><br><br><span class="hljs-comment">// 函数是一段代码的封装</span><br><br><span class="hljs-comment">// 函数定义</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">sum</span><span class="hljs-params">(x <span class="hljs-type">int</span>, y <span class="hljs-type">int</span>)</span></span> (ret <span class="hljs-type">int</span>) &#123;<br><span class="hljs-keyword">return</span> x + y<br>&#125;<br><br><span class="hljs-comment">// 没有返回值</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f1</span><span class="hljs-params">(x <span class="hljs-type">int</span>, y <span class="hljs-type">int</span>)</span></span> &#123;<br>fmt.Println(x + y)<br>&#125;<br><br><span class="hljs-comment">// 没有参数没有返回值</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f2</span><span class="hljs-params">()</span></span> &#123;<br>fmt.Println(<span class="hljs-string">&quot;f2&quot;</span>)<br>&#125;<br><br><span class="hljs-comment">// 没有参数但有返回值</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f3</span><span class="hljs-params">()</span></span> <span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">3</span><br>&#125;<br><br><span class="hljs-comment">// 返回值可以命名也可以不命名</span><br><span class="hljs-comment">// 命名的返回值相当于在函数中声明一个变量</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f4</span><span class="hljs-params">(x <span class="hljs-type">int</span>, y <span class="hljs-type">int</span>)</span></span> (ret <span class="hljs-type">int</span>) &#123;<br>ret = x + y<br><span class="hljs-keyword">return</span> <span class="hljs-comment">//命名返回值可以return后省略</span><br>&#125;<br><br><span class="hljs-comment">// 多值返回</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f5</span><span class="hljs-params">()</span></span> (<span class="hljs-type">int</span>, <span class="hljs-type">string</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>, <span class="hljs-string">&quot;哈哈&quot;</span><br>&#125;<br><br><span class="hljs-comment">// 参数的类型简写：当参数中连续的两个参数的类型一致时，我们可以将前面参数的类型简写</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f6</span><span class="hljs-params">(x, y <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">return</span> x + y<br>&#125;<br><br><span class="hljs-comment">// 可变长参数</span><br><span class="hljs-comment">// 可变长参数必须放在函数参数的最后</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f7</span><span class="hljs-params">(x <span class="hljs-type">string</span>, y ...<span class="hljs-type">int</span>)</span></span> &#123;<br>fmt.Println(x)<br>fmt.Println(y)<br>&#125;<br><br><span class="hljs-comment">// 匿名函数</span><br><span class="hljs-keyword">var</span> f8 = <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(x, y <span class="hljs-type">int</span>)</span></span> &#123;<br>fmt.Println(x + y)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// a := sum(1, 2)</span><br><span class="hljs-comment">// fmt.Println(a)</span><br><br><span class="hljs-comment">// _, a1 := f5()</span><br><span class="hljs-comment">// fmt.Println(a1)</span><br><br>f8(<span class="hljs-number">10</span>, <span class="hljs-number">20</span>)<br><span class="hljs-comment">// 函数内部无法定义一个带名字的函数</span><br><span class="hljs-comment">// func f9()  &#123;</span><br><span class="hljs-comment">// &#125;</span><br>f9 := <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(x, y <span class="hljs-type">int</span>)</span></span> &#123;<br>fmt.Println(x + y)<br>&#125;<br>f9(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>)<br><br><span class="hljs-comment">// 如果只调用一次的函数，还可以简写成立即执行函数</span><br><span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(x, y <span class="hljs-type">int</span>)</span></span> &#123;<br>fmt.Println(x + y)<br>&#125;(<span class="hljs-number">10</span>, <span class="hljs-number">5</span>)<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="defer语句"><a href="#defer语句" class="headerlink" title="defer语句"></a>defer语句</h2><p>Go语言中的defer语句会将其后面跟随的语句进行延迟处理。在defer归属的函数即将返回时，将延迟处理的语句按defer定义的逆序进行执行，也就是说，先被defer的语句最后被执行，最后被defer的语句，最先被执行。</p><p>函数中return语句在底层并不是原子操作，它分为给返回值赋值和RET指令两步。而defer语句执行的时机就在返回值赋值操作后，RET指令执行前。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-comment">// defer</span><br><br><span class="hljs-comment">// defer多用于函数结束之前释放资源(文件句柄，数据库连接)</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">deferDemo</span><span class="hljs-params">()</span></span> &#123;<br>fmt.Println(<span class="hljs-string">&quot;start&quot;</span>)<br><span class="hljs-keyword">defer</span> fmt.Println(<span class="hljs-string">&quot;哈哈---1&quot;</span>) <span class="hljs-comment">// defer把它后面的语句延迟到函数即将返回时候在执行</span><br><span class="hljs-keyword">defer</span> fmt.Println(<span class="hljs-string">&quot;哈哈--2&quot;</span>)  <span class="hljs-comment">// 一个函数中可以有多个defer语句</span><br><span class="hljs-keyword">defer</span> fmt.Println(<span class="hljs-string">&quot;哈哈-3&quot;</span>)   <span class="hljs-comment">//多个defer语句按照先进后出的顺序延迟执行</span><br>fmt.Println(<span class="hljs-string">&quot;end&quot;</span>)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f1</span><span class="hljs-params">()</span></span> <span class="hljs-type">int</span> &#123;<br>x := <span class="hljs-number">5</span><br>fmt.Println(&amp;x)<br><span class="hljs-keyword">defer</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span> &#123;<br>x++ <span class="hljs-comment">// 修改的不是x的返回值</span><br>fmt.Println(x)<br>fmt.Println(&amp;x)<br>&#125;()<br>fmt.Printf(<span class="hljs-string">&quot;------%d\n&quot;</span>, x)<br><span class="hljs-keyword">return</span> x<br>&#125;<br><br><span class="hljs-comment">// 函数中return语句在底层并不是原子操作，它分为给返回值 赋值和RET指令两步。而defer语句执行的时机就在返回值赋值操作后，RET指令执行前</span><br><br><span class="hljs-comment">// 返回值开辟了一块新的内存空间0xc0000140d0，未命名。赋值为5</span><br><span class="hljs-comment">// 运行defer x++ x=6 ,x跟返回值已经没有关系了</span><br><span class="hljs-comment">// ruturn 是指向0xc0000140d0 这片区域的值</span><br><br><span class="hljs-comment">// 返回值开辟了一块新的内存空间0x----，赋值为x=5</span><br><span class="hljs-comment">// 运行defer x=6 。同时修改了指向0x----的值</span><br><span class="hljs-comment">// return 指向0x-----区域的值</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f2</span><span class="hljs-params">()</span></span> (x <span class="hljs-type">int</span>) &#123;<br><span class="hljs-keyword">defer</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span> &#123;<br>x++<br>&#125;()<br><span class="hljs-keyword">return</span> <span class="hljs-number">5</span> <span class="hljs-comment">// 返回值=x</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f3</span><span class="hljs-params">()</span></span> (y <span class="hljs-type">int</span>) &#123;<br>x := <span class="hljs-number">5</span><br><span class="hljs-keyword">defer</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span> &#123;<br>x++<br>&#125;()<br><span class="hljs-keyword">return</span> x <span class="hljs-comment">// 返回值 = y = x =5</span><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">f4</span><span class="hljs-params">()</span></span> (x <span class="hljs-type">int</span>) &#123;<br><span class="hljs-keyword">defer</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(x <span class="hljs-type">int</span>)</span></span> &#123;<br>x++ <span class="hljs-comment">//改变的是函数中的副本</span><br>&#125;(x) <span class="hljs-comment">//x当参数传递</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">5</span> <span class="hljs-comment">// 返回值 = x = 5</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-comment">// deferDemo()</span><br>fmt.Println(f1())<br>fmt.Println(f2())<br><span class="hljs-comment">// fmt.Println(f3())</span><br><span class="hljs-comment">// fmt.Println(f4())</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-comment">// 递归：函数自己调用自己</span><br><br><span class="hljs-comment">// 递归适合处理那种问题相同，规模越来越小的场景</span><br><span class="hljs-comment">// 递归一定要有一个明确的退出条件</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">demo</span><span class="hljs-params">(n <span class="hljs-type">uint64</span>)</span></span> <span class="hljs-type">uint64</span> &#123;<br><span class="hljs-keyword">if</span> n &lt;= <span class="hljs-number">1</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>&#125;<br><span class="hljs-keyword">return</span> n * demo(n<span class="hljs-number">-1</span>)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>a := demo(<span class="hljs-number">5</span>)<br>fmt.Println(a)<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>GO</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Go learn</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
